{"version":3,"sources":["src/query/hero.js","src/query/roles.js","src/query/abilities.js","src/constants.js","src/config.js","src/utils.js","src/index_card.js"],"names":["heroQuery","id","JSON","stringify","query","rolesQuery","abilitiesQuery","PRIMARY_ATTR_LIST","str","int","agi","IMG_ONERROR","BASE_HEALTH","HP_UNIT","BOUNUS_HEALTH_REGENERATION","BASE_MANA","MP_UNIT","BOUNUS_MANA_REGENERATION","DAMAGE_TYPE","DOTA_UNIT_TARGET_TEAM","SPELL_IMMUNITY_LIST","STRATZ_TOKEN","STRATZ_API","STRATZ_HERO_URL","STRATZ_ABILITIE_URL","VIDEO_URL","getGraphqlData","fetch","method","body","headers","Authorization","response","json","data","formatText","string","splitChart","slicePlacement","split","slice","heroData","rolesData","abilitiesData","heroId","heroCardNode","document","getElementsByClassName","heroCardFrontNode","heroCards","heroPrimaryAttrNode","createElement","classList","add","appendChild","heroPrimaryAttrDom","style","display","heroAttackTypeNode","heroAttackTypeDom","heroBaseNode","heroAbilitiesListNode","heroVideoNode","heroVideoNodeFallbackImgNode","heroVideoSourceNode","complexityListNode","heroMpHpNode","heroHpDom","heroMpDom","heroNameNode","heroRolesNode","heroAttackNode","heroDefenseNode","heroMobilityNode","heroBaseAttackDom","heroAttackRateDom","heroAttackRangeDom","heroTurnRateDom","heroMoveSpeedDom","heroVisionDom","heroArmorDom","heroMagicResistDom","heroAbilitiesTalentNode","heroScepterShardNode","setAttribute","append","heroTalentNode","heroTalentTooltipNode","heroAbilityTooltipNode","heroScepterShardTooltipNode","main","init","addEventListener","e","transform","target","getAttribute","constants","hero","abilities","stats","shortName","language","roles","talents","primaryAttribute","agilityBase","agilityGain","intelligenceBase","intelligenceGain","strengthBase","strengthGain","attackType","complexity","hpBarOffset","mpRegen","moveSpeed","moveTurnRate","startingMagicArmor","startingArmor","attackRate","attackRange","startingDamageMin","startingDamageMax","visionNighttimeRange","visionDaytimeRange","updateHero","setHeroBase","setHeroPrimaryAttribute","setHeroAttackType","setHeroAbilities","setHeroVideo","setHeroComplexity","setHeroHPMP","setHeroName","displayName","setHeroRoles","setHeroBasic","setHeroTalents","setHeroAbilityHover","setHeroScepterShard","innerHTML","role","heroRolesDom","hp","hpGen","toFixed","mp","mpGen","i","complexityImgDom","heroBaseStrGainDom","heroBaseIntGainDom","heroBaseAgiGainDom","toLowerCase","baseAttack","vision","onlyNoramlAbilities","filter","ability","abilitiesIsGrantedByScepter","abilitiesIsGrantedByShard","shardDescription","heroAbilityDom","reverse","talent","heroTalentsDom","heroTalentData","find","heroAbilitiesList","heroAbility","abilityTooltipTem","dynamicModalPostion","abilityName","abilityHTML","name","attributes","stat","cooldown","manaCost","unitDamageType","dispellable","unitTargetTeam","spellImmunity","description","imgData","abilityScepterShardCommonContent","damTypeText","mcData","join","cdData","attribData","attr","value","nameData","replaceAll","toUpperCase","valueData","dispellableHTML","dmgTypeHTML","unitTargetTeamHTML","spellImmunityHTML","spellImmunityText","aghanimDescription","scepterShardTooltipTem","isScepterOrShard","isScepterUpgradeHTML","hasScepterUpgrade","isGrantedByShard","upgradeOrNewText","pushEl","t","className","offsetTop","offsetLeft","offsetHeight","offsetWidth","width","height","modalNodeClas","modalNodeDisplayValue","arr","mouseTargetWidth","mouseTargetHeight","windowScrollY","window","scrollY","windowScrollX","scrollX","push","offsetParent","tooltipX","tooltipY","tooltipXOffsetLeftTotal","reduce","total","cur","tooltipYOffsetTopTotal","modalNode","tooltipHeight","tooltipWidth","innerWidth","innerHeight","left","top","console","log"],"mappings":";AAwHE,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,eAAA,EAxHK,IAAMA,EAAY,SAACC,GACxB,OAAOC,KAAKC,UAAU,CACpBC,MAEcH,wCAAAA,OAAAA,EAAE,itFAoHlB,QAAA,UAAA;;AC3GA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gBAAA,EAbK,IAAMI,EAAa,WACxB,OAAOH,KAAKC,UAAU,CACpBC,MAAK,kIAWP,QAAA,WAAA;;ACEA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,oBAAA,EAfK,IAAME,EAAiB,WAC5B,OAAOJ,KAAKC,UAAU,CACpBC,MAAK,8JAaP,QAAA,eAAA;;ACuBA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,oBAAA,QAAA,kBAAA,QAAA,QAAA,QAAA,YAAA,QAAA,QAAA,QAAA,sBAAA,QAAA,YAAA,QAAA,yBAAA,QAAA,2BAAA,QAAA,UAAA,QAAA,iBAAA,EAtCK,IAAMG,EAAoB,CAC/BC,IAAK,gBACLC,IAAK,oBACLC,IAAK,gBACL,QAAA,kBAAA,EAEK,IAAMC,EAAc,yBAAyB,QAAA,YAAA,EAE7C,IAAMC,EAAc,IAAI,QAAA,YAAA,EACxB,IAAMC,EAAU,GAAG,QAAA,QAAA,EACnB,IAAMC,EAA6B,GAAI,QAAA,2BAAA,EAEvC,IAAMC,EAAY,GAAG,QAAA,UAAA,EACrB,IAAMC,EAAU,GAAG,QAAA,QAAA,EACnB,IAAMC,EAA2B,IAExC,QAAA,yBAAA,EACO,IAAMC,EAAc,CACzB,EAAG,mBACH,EAAG,uBACH,EAAG,sBACH,EAAG,mBACH,EAAG,kBACH,EAAG,0BACH,QAAA,YAAA,EAEK,IAAMC,EAAwB,CACnC,EAAG,6BACH,EAAG,iCACH,EAAG,8BACH,EAAG,6BACH,EAAG,gCACH,QAAA,sBAAA,EAEK,IAAMC,EAAsB,CACjC,EAAG,MACH,EAAG,MACH,EAAG,MACH,QAAA,oBAAA;;AC9BsF,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,QAAA,aAAA,QAAA,gBAAA,QAAA,WAAA,QAAA,yBAAA,EANjF,IAAMC,EAAuC,2ZAAC,QAAA,aAAA,EAC9C,IAAMC,EAAa,iCAAiC,QAAA,WAAA,EACpD,IAAMC,EAAkB,6CAA6C,QAAA,gBAAA,EACrE,IAAMC,EACX,gDAAgD,QAAA,oBAAA,EAC3C,IAAMC,EACX,sFAAsF,QAAA,UAAA;;ACUtF,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,eAAA,QAAA,gBAAA,EAlBF,IAAA,EAAA,QAAA,eAAuD,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SACvD,IAAA,EAAA,WAAA,OAAA,GAAA,IAAA,EAAA,GAAA,EAAA,OAAA,UAAA,EAAA,EAAA,eAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,mBAAA,OAAA,OAAA,GAAA,EAAA,EAAA,UAAA,aAAA,EAAA,EAAA,eAAA,kBAAA,EAAA,EAAA,aAAA,gBAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,IAAA,EAAA,GAAA,IAAA,MAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,qBAAA,EAAA,EAAA,EAAA,EAAA,OAAA,OAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,IAAA,OAAA,EAAA,EAAA,UAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,MAAA,CAAA,KAAA,SAAA,IAAA,EAAA,KAAA,EAAA,IAAA,MAAA,GAAA,MAAA,CAAA,KAAA,QAAA,IAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,GAAA,SAAA,KAAA,SAAA,KAAA,SAAA,KAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,WAAA,OAAA,OAAA,IAAA,EAAA,OAAA,eAAA,EAAA,GAAA,EAAA,EAAA,EAAA,MAAA,GAAA,IAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,GAAA,IAAA,EAAA,EAAA,UAAA,EAAA,UAAA,OAAA,OAAA,GAAA,SAAA,EAAA,GAAA,CAAA,OAAA,QAAA,UAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,SAAA,GAAA,OAAA,KAAA,QAAA,EAAA,OAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,UAAA,CAAA,MAAA,SAAA,EAAA,GAAA,SAAA,IAAA,OAAA,IAAA,EAAA,SAAA,EAAA,IAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,UAAA,EAAA,KAAA,CAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,MAAA,OAAA,GAAA,UAAA,EAAA,IAAA,EAAA,KAAA,EAAA,WAAA,EAAA,QAAA,EAAA,SAAA,KAAA,SAAA,GAAA,EAAA,OAAA,EAAA,EAAA,IAAA,SAAA,GAAA,EAAA,QAAA,EAAA,EAAA,KAAA,EAAA,QAAA,GAAA,KAAA,SAAA,GAAA,EAAA,MAAA,EAAA,EAAA,IAAA,SAAA,GAAA,OAAA,EAAA,QAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,CAAA,EAAA,EAAA,EAAA,KAAA,OAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA,OAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,iBAAA,OAAA,SAAA,EAAA,GAAA,GAAA,cAAA,EAAA,MAAA,IAAA,MAAA,gCAAA,GAAA,cAAA,EAAA,CAAA,GAAA,UAAA,EAAA,MAAA,EAAA,OAAA,IAAA,IAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,CAAA,IAAA,EAAA,EAAA,SAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,IAAA,EAAA,SAAA,OAAA,GAAA,GAAA,SAAA,EAAA,OAAA,EAAA,KAAA,EAAA,MAAA,EAAA,SAAA,GAAA,UAAA,EAAA,OAAA,CAAA,GAAA,mBAAA,EAAA,MAAA,EAAA,YAAA,EAAA,IAAA,EAAA,kBAAA,EAAA,SAAA,WAAA,EAAA,QAAA,EAAA,OAAA,SAAA,EAAA,KAAA,EAAA,YAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,WAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,YAAA,iBAAA,EAAA,MAAA,EAAA,SAAA,MAAA,CAAA,MAAA,EAAA,IAAA,KAAA,EAAA,MAAA,UAAA,EAAA,OAAA,EAAA,YAAA,EAAA,OAAA,QAAA,EAAA,IAAA,EAAA,OAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,SAAA,GAAA,QAAA,IAAA,EAAA,OAAA,EAAA,SAAA,KAAA,UAAA,GAAA,EAAA,SAAA,SAAA,EAAA,OAAA,SAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,UAAA,EAAA,SAAA,WAAA,IAAA,EAAA,OAAA,QAAA,EAAA,IAAA,IAAA,UAAA,oCAAA,EAAA,aAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,UAAA,EAAA,KAAA,OAAA,EAAA,OAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,SAAA,KAAA,EAAA,IAAA,EAAA,EAAA,IAAA,OAAA,EAAA,EAAA,MAAA,EAAA,EAAA,YAAA,EAAA,MAAA,EAAA,KAAA,EAAA,QAAA,WAAA,EAAA,SAAA,EAAA,OAAA,OAAA,EAAA,SAAA,GAAA,EAAA,SAAA,KAAA,GAAA,GAAA,EAAA,OAAA,QAAA,EAAA,IAAA,IAAA,UAAA,oCAAA,EAAA,SAAA,KAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,CAAA,OAAA,EAAA,IAAA,KAAA,IAAA,EAAA,SAAA,EAAA,IAAA,KAAA,IAAA,EAAA,WAAA,EAAA,GAAA,EAAA,SAAA,EAAA,IAAA,KAAA,WAAA,KAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,YAAA,GAAA,EAAA,KAAA,gBAAA,EAAA,IAAA,EAAA,WAAA,EAAA,SAAA,EAAA,GAAA,KAAA,WAAA,CAAA,CAAA,OAAA,SAAA,EAAA,QAAA,EAAA,MAAA,KAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,OAAA,EAAA,KAAA,GAAA,GAAA,mBAAA,EAAA,KAAA,OAAA,EAAA,IAAA,MAAA,EAAA,QAAA,CAAA,IAAA,GAAA,EAAA,EAAA,SAAA,IAAA,OAAA,EAAA,EAAA,QAAA,GAAA,EAAA,KAAA,EAAA,GAAA,OAAA,EAAA,MAAA,EAAA,GAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,WAAA,EAAA,EAAA,MAAA,EAAA,GAAA,OAAA,EAAA,KAAA,GAAA,MAAA,CAAA,KAAA,GAAA,SAAA,IAAA,MAAA,CAAA,WAAA,EAAA,MAAA,GAAA,OAAA,EAAA,UAAA,EAAA,EAAA,EAAA,cAAA,CAAA,MAAA,EAAA,cAAA,IAAA,EAAA,EAAA,cAAA,CAAA,MAAA,EAAA,cAAA,IAAA,EAAA,YAAA,EAAA,EAAA,EAAA,qBAAA,EAAA,oBAAA,SAAA,GAAA,IAAA,EAAA,mBAAA,GAAA,EAAA,YAAA,QAAA,IAAA,IAAA,GAAA,uBAAA,EAAA,aAAA,EAAA,QAAA,EAAA,KAAA,SAAA,GAAA,OAAA,OAAA,eAAA,OAAA,eAAA,EAAA,IAAA,EAAA,UAAA,EAAA,EAAA,EAAA,EAAA,sBAAA,EAAA,UAAA,OAAA,OAAA,GAAA,GAAA,EAAA,MAAA,SAAA,GAAA,MAAA,CAAA,QAAA,IAAA,EAAA,EAAA,WAAA,EAAA,EAAA,UAAA,EAAA,WAAA,OAAA,OAAA,EAAA,cAAA,EAAA,EAAA,MAAA,SAAA,EAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,SAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,OAAA,EAAA,oBAAA,GAAA,EAAA,EAAA,OAAA,KAAA,SAAA,GAAA,OAAA,EAAA,KAAA,EAAA,MAAA,EAAA,UAAA,EAAA,GAAA,EAAA,EAAA,EAAA,aAAA,EAAA,EAAA,EAAA,WAAA,OAAA,OAAA,EAAA,EAAA,WAAA,WAAA,MAAA,uBAAA,EAAA,KAAA,SAAA,GAAA,IAAA,EAAA,OAAA,GAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,KAAA,GAAA,OAAA,EAAA,UAAA,SAAA,IAAA,KAAA,EAAA,QAAA,CAAA,IAAA,EAAA,EAAA,MAAA,GAAA,KAAA,EAAA,OAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,MAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,UAAA,CAAA,YAAA,EAAA,MAAA,SAAA,GAAA,GAAA,KAAA,KAAA,EAAA,KAAA,KAAA,EAAA,KAAA,KAAA,KAAA,WAAA,EAAA,KAAA,MAAA,EAAA,KAAA,SAAA,KAAA,KAAA,OAAA,OAAA,KAAA,SAAA,EAAA,KAAA,WAAA,QAAA,IAAA,EAAA,IAAA,IAAA,KAAA,KAAA,MAAA,EAAA,OAAA,IAAA,EAAA,KAAA,KAAA,KAAA,OAAA,EAAA,MAAA,MAAA,KAAA,QAAA,IAAA,KAAA,WAAA,KAAA,MAAA,EAAA,IAAA,EAAA,KAAA,WAAA,GAAA,WAAA,GAAA,UAAA,EAAA,KAAA,MAAA,EAAA,IAAA,OAAA,KAAA,MAAA,kBAAA,SAAA,GAAA,GAAA,KAAA,KAAA,MAAA,EAAA,IAAA,EAAA,KAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,KAAA,QAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,IAAA,EAAA,OAAA,OAAA,EAAA,SAAA,KAAA,EAAA,IAAA,IAAA,EAAA,KAAA,WAAA,OAAA,EAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,KAAA,WAAA,GAAA,EAAA,EAAA,WAAA,GAAA,SAAA,EAAA,OAAA,OAAA,EAAA,OAAA,GAAA,EAAA,QAAA,KAAA,KAAA,CAAA,IAAA,EAAA,EAAA,KAAA,EAAA,YAAA,EAAA,EAAA,KAAA,EAAA,cAAA,GAAA,GAAA,EAAA,CAAA,GAAA,KAAA,KAAA,EAAA,SAAA,OAAA,EAAA,EAAA,UAAA,GAAA,GAAA,KAAA,KAAA,EAAA,WAAA,OAAA,EAAA,EAAA,iBAAA,GAAA,GAAA,GAAA,KAAA,KAAA,EAAA,SAAA,OAAA,EAAA,EAAA,UAAA,OAAA,CAAA,IAAA,EAAA,MAAA,IAAA,MAAA,0CAAA,GAAA,KAAA,KAAA,EAAA,WAAA,OAAA,EAAA,EAAA,gBAAA,OAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,KAAA,WAAA,OAAA,EAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,KAAA,WAAA,GAAA,GAAA,EAAA,QAAA,KAAA,MAAA,EAAA,KAAA,EAAA,eAAA,KAAA,KAAA,EAAA,WAAA,CAAA,IAAA,EAAA,EAAA,OAAA,IAAA,UAAA,GAAA,aAAA,IAAA,EAAA,QAAA,GAAA,GAAA,EAAA,aAAA,EAAA,MAAA,IAAA,EAAA,EAAA,EAAA,WAAA,GAAA,OAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,GAAA,KAAA,OAAA,OAAA,KAAA,KAAA,EAAA,WAAA,GAAA,KAAA,SAAA,IAAA,SAAA,SAAA,EAAA,GAAA,GAAA,UAAA,EAAA,KAAA,MAAA,EAAA,IAAA,MAAA,UAAA,EAAA,MAAA,aAAA,EAAA,KAAA,KAAA,KAAA,EAAA,IAAA,WAAA,EAAA,MAAA,KAAA,KAAA,KAAA,IAAA,EAAA,IAAA,KAAA,OAAA,SAAA,KAAA,KAAA,OAAA,WAAA,EAAA,MAAA,IAAA,KAAA,KAAA,GAAA,GAAA,OAAA,SAAA,GAAA,IAAA,IAAA,EAAA,KAAA,WAAA,OAAA,EAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,KAAA,WAAA,GAAA,GAAA,EAAA,aAAA,EAAA,OAAA,KAAA,SAAA,EAAA,WAAA,EAAA,UAAA,EAAA,GAAA,IAAA,MAAA,SAAA,GAAA,IAAA,IAAA,EAAA,KAAA,WAAA,OAAA,EAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,KAAA,WAAA,GAAA,GAAA,EAAA,SAAA,EAAA,CAAA,IAAA,EAAA,EAAA,WAAA,GAAA,UAAA,EAAA,KAAA,CAAA,IAAA,EAAA,EAAA,IAAA,EAAA,GAAA,OAAA,GAAA,MAAA,IAAA,MAAA,0BAAA,cAAA,SAAA,EAAA,EAAA,GAAA,OAAA,KAAA,SAAA,CAAA,SAAA,EAAA,GAAA,WAAA,EAAA,QAAA,GAAA,SAAA,KAAA,SAAA,KAAA,SAAA,GAAA,IAAA,EAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,MAAA,GAAA,YAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,QAAA,QAAA,GAAA,KAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,WAAA,IAAA,EAAA,KAAA,EAAA,UAAA,OAAA,IAAA,QAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,EAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,GAAA,OAAA,MAEA,IAAMC,EAAc,WAAA,IAAG,EAAA,EAAA,IAAA,KAAA,SAAOtB,EAAAA,GAAK,IAAA,EAAA,EAAA,OAAA,IAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EAAA,OAAA,EAAA,KAAA,EACZuB,MAAML,EAAU,WAAE,CACrCM,OAAQ,OACRC,KAAMzB,EACN0B,QAAS,CACP,eAAgB,mBAChBC,cAAyBV,UAAAA,OAAAA,EAAY,iBAEvC,KAAA,EAPU,OAARW,EAAQ,EAAA,KAAA,EAAA,KAAA,EAQKA,EAASC,OAAM,KAAA,EAAxB,OAAJC,EAAI,EAAA,KACDA,EAAAA,OAAAA,SAAAA,GAAI,KAAA,EAAA,IAAA,MAAA,OAAA,EAAA,SAAA,MACZ,OAXKR,SAAc,GAAA,OAAA,EAAA,MAAA,KAAA,YAAA,GAWlB,QAAA,eAAA,EAEK,IAAMS,EAAa,SAACC,EAAQC,EAAYC,GAC7C,OAAOF,EAAOG,MAAMF,GAAYG,MAAMF,IACtC,QAAA,WAAA;;ACsyCF,aAxzCA,IAAA,EAAA,QAAA,mBACA,EAAA,QAAA,oBACA,EAAA,QAAA,wBAGA,EAAA,QAAA,kBAcA,EAAA,QAAA,eAGA,EAAA,QAAA,cAAwD,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SArBxD,IAAA,EAAA,WAAA,OAAA,GAAA,IAAA,EAAA,GAAA,EAAA,OAAA,UAAA,EAAA,EAAA,eAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,mBAAA,OAAA,OAAA,GAAA,EAAA,EAAA,UAAA,aAAA,EAAA,EAAA,eAAA,kBAAA,EAAA,EAAA,aAAA,gBAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,IAAA,EAAA,GAAA,IAAA,MAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,qBAAA,EAAA,EAAA,EAAA,EAAA,OAAA,OAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,IAAA,OAAA,EAAA,EAAA,UAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,MAAA,CAAA,KAAA,SAAA,IAAA,EAAA,KAAA,EAAA,IAAA,MAAA,GAAA,MAAA,CAAA,KAAA,QAAA,IAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,GAAA,SAAA,KAAA,SAAA,KAAA,SAAA,KAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,WAAA,OAAA,OAAA,IAAA,EAAA,OAAA,eAAA,EAAA,GAAA,EAAA,EAAA,EAAA,MAAA,GAAA,IAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,GAAA,IAAA,EAAA,EAAA,UAAA,EAAA,UAAA,OAAA,OAAA,GAAA,SAAA,EAAA,GAAA,CAAA,OAAA,QAAA,UAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,SAAA,GAAA,OAAA,KAAA,QAAA,EAAA,OAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,UAAA,CAAA,MAAA,SAAA,EAAA,GAAA,SAAA,IAAA,OAAA,IAAA,EAAA,SAAA,EAAA,IAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,UAAA,EAAA,KAAA,CAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,MAAA,OAAA,GAAA,UAAA,EAAA,IAAA,EAAA,KAAA,EAAA,WAAA,EAAA,QAAA,EAAA,SAAA,KAAA,SAAA,GAAA,EAAA,OAAA,EAAA,EAAA,IAAA,SAAA,GAAA,EAAA,QAAA,EAAA,EAAA,KAAA,EAAA,QAAA,GAAA,KAAA,SAAA,GAAA,EAAA,MAAA,EAAA,EAAA,IAAA,SAAA,GAAA,OAAA,EAAA,QAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,CAAA,EAAA,EAAA,EAAA,KAAA,OAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA,OAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,iBAAA,OAAA,SAAA,EAAA,GAAA,GAAA,cAAA,EAAA,MAAA,IAAA,MAAA,gCAAA,GAAA,cAAA,EAAA,CAAA,GAAA,UAAA,EAAA,MAAA,EAAA,OAAA,IAAA,IAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,CAAA,IAAA,EAAA,EAAA,SAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,IAAA,EAAA,SAAA,OAAA,GAAA,GAAA,SAAA,EAAA,OAAA,EAAA,KAAA,EAAA,MAAA,EAAA,SAAA,GAAA,UAAA,EAAA,OAAA,CAAA,GAAA,mBAAA,EAAA,MAAA,EAAA,YAAA,EAAA,IAAA,EAAA,kBAAA,EAAA,SAAA,WAAA,EAAA,QAAA,EAAA,OAAA,SAAA,EAAA,KAAA,EAAA,YAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,WAAA,EAAA,KAAA,CAAA,GAAA,EAAA,EAAA,KAAA,YAAA,iBAAA,EAAA,MAAA,EAAA,SAAA,MAAA,CAAA,MAAA,EAAA,IAAA,KAAA,EAAA,MAAA,UAAA,EAAA,OAAA,EAAA,YAAA,EAAA,OAAA,QAAA,EAAA,IAAA,EAAA,OAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,SAAA,GAAA,QAAA,IAAA,EAAA,OAAA,EAAA,SAAA,KAAA,UAAA,GAAA,EAAA,SAAA,SAAA,EAAA,OAAA,SAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,UAAA,EAAA,SAAA,WAAA,IAAA,EAAA,OAAA,QAAA,EAAA,IAAA,IAAA,UAAA,oCAAA,EAAA,aAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,UAAA,EAAA,KAAA,OAAA,EAAA,OAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,SAAA,KAAA,EAAA,IAAA,EAAA,EAAA,IAAA,OAAA,EAAA,EAAA,MAAA,EAAA,EAAA,YAAA,EAAA,MAAA,EAAA,KAAA,EAAA,QAAA,WAAA,EAAA,SAAA,EAAA,OAAA,OAAA,EAAA,SAAA,GAAA,EAAA,SAAA,KAAA,GAAA,GAAA,EAAA,OAAA,QAAA,EAAA,IAAA,IAAA,UAAA,oCAAA,EAAA,SAAA,KAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,CAAA,OAAA,EAAA,IAAA,KAAA,IAAA,EAAA,SAAA,EAAA,IAAA,KAAA,IAAA,EAAA,WAAA,EAAA,GAAA,EAAA,SAAA,EAAA,IAAA,KAAA,WAAA,KAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,YAAA,GAAA,EAAA,KAAA,gBAAA,EAAA,IAAA,EAAA,WAAA,EAAA,SAAA,EAAA,GAAA,KAAA,WAAA,CAAA,CAAA,OAAA,SAAA,EAAA,QAAA,EAAA,MAAA,KAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,OAAA,EAAA,KAAA,GAAA,GAAA,mBAAA,EAAA,KAAA,OAAA,EAAA,IAAA,MAAA,EAAA,QAAA,CAAA,IAAA,GAAA,EAAA,EAAA,SAAA,IAAA,OAAA,EAAA,EAAA,QAAA,GAAA,EAAA,KAAA,EAAA,GAAA,OAAA,EAAA,MAAA,EAAA,GAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,WAAA,EAAA,EAAA,MAAA,EAAA,GAAA,OAAA,EAAA,KAAA,GAAA,MAAA,CAAA,KAAA,GAAA,SAAA,IAAA,MAAA,CAAA,WAAA,EAAA,MAAA,GAAA,OAAA,EAAA,UAAA,EAAA,EAAA,EAAA,cAAA,CAAA,MAAA,EAAA,cAAA,IAAA,EAAA,EAAA,cAAA,CAAA,MAAA,EAAA,cAAA,IAAA,EAAA,YAAA,EAAA,EAAA,EAAA,qBAAA,EAAA,oBAAA,SAAA,GAAA,IAAA,EAAA,mBAAA,GAAA,EAAA,YAAA,QAAA,IAAA,IAAA,GAAA,uBAAA,EAAA,aAAA,EAAA,QAAA,EAAA,KAAA,SAAA,GAAA,OAAA,OAAA,eAAA,OAAA,eAAA,EAAA,IAAA,EAAA,UAAA,EAAA,EAAA,EAAA,EAAA,sBAAA,EAAA,UAAA,OAAA,OAAA,GAAA,GAAA,EAAA,MAAA,SAAA,GAAA,MAAA,CAAA,QAAA,IAAA,EAAA,EAAA,WAAA,EAAA,EAAA,UAAA,EAAA,WAAA,OAAA,OAAA,EAAA,cAAA,EAAA,EAAA,MAAA,SAAA,EAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,SAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,OAAA,EAAA,oBAAA,GAAA,EAAA,EAAA,OAAA,KAAA,SAAA,GAAA,OAAA,EAAA,KAAA,EAAA,MAAA,EAAA,UAAA,EAAA,GAAA,EAAA,EAAA,EAAA,aAAA,EAAA,EAAA,EAAA,WAAA,OAAA,OAAA,EAAA,EAAA,WAAA,WAAA,MAAA,uBAAA,EAAA,KAAA,SAAA,GAAA,IAAA,EAAA,OAAA,GAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,KAAA,GAAA,OAAA,EAAA,UAAA,SAAA,IAAA,KAAA,EAAA,QAAA,CAAA,IAAA,EAAA,EAAA,MAAA,GAAA,KAAA,EAAA,OAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,MAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,UAAA,CAAA,YAAA,EAAA,MAAA,SAAA,GAAA,GAAA,KAAA,KAAA,EAAA,KAAA,KAAA,EAAA,KAAA,KAAA,KAAA,WAAA,EAAA,KAAA,MAAA,EAAA,KAAA,SAAA,KAAA,KAAA,OAAA,OAAA,KAAA,SAAA,EAAA,KAAA,WAAA,QAAA,IAAA,EAAA,IAAA,IAAA,KAAA,KAAA,MAAA,EAAA,OAAA,IAAA,EAAA,KAAA,KAAA,KAAA,OAAA,EAAA,MAAA,MAAA,KAAA,QAAA,IAAA,KAAA,WAAA,KAAA,MAAA,EAAA,IAAA,EAAA,KAAA,WAAA,GAAA,WAAA,GAAA,UAAA,EAAA,KAAA,MAAA,EAAA,IAAA,OAAA,KAAA,MAAA,kBAAA,SAAA,GAAA,GAAA,KAAA,KAAA,MAAA,EAAA,IAAA,EAAA,KAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,KAAA,QAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,IAAA,EAAA,OAAA,OAAA,EAAA,SAAA,KAAA,EAAA,IAAA,IAAA,EAAA,KAAA,WAAA,OAAA,EAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,KAAA,WAAA,GAAA,EAAA,EAAA,WAAA,GAAA,SAAA,EAAA,OAAA,OAAA,EAAA,OAAA,GAAA,EAAA,QAAA,KAAA,KAAA,CAAA,IAAA,EAAA,EAAA,KAAA,EAAA,YAAA,EAAA,EAAA,KAAA,EAAA,cAAA,GAAA,GAAA,EAAA,CAAA,GAAA,KAAA,KAAA,EAAA,SAAA,OAAA,EAAA,EAAA,UAAA,GAAA,GAAA,KAAA,KAAA,EAAA,WAAA,OAAA,EAAA,EAAA,iBAAA,GAAA,GAAA,GAAA,KAAA,KAAA,EAAA,SAAA,OAAA,EAAA,EAAA,UAAA,OAAA,CAAA,IAAA,EAAA,MAAA,IAAA,MAAA,0CAAA,GAAA,KAAA,KAAA,EAAA,WAAA,OAAA,EAAA,EAAA,gBAAA,OAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,KAAA,WAAA,OAAA,EAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,KAAA,WAAA,GAAA,GAAA,EAAA,QAAA,KAAA,MAAA,EAAA,KAAA,EAAA,eAAA,KAAA,KAAA,EAAA,WAAA,CAAA,IAAA,EAAA,EAAA,OAAA,IAAA,UAAA,GAAA,aAAA,IAAA,EAAA,QAAA,GAAA,GAAA,EAAA,aAAA,EAAA,MAAA,IAAA,EAAA,EAAA,EAAA,WAAA,GAAA,OAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,GAAA,KAAA,OAAA,OAAA,KAAA,KAAA,EAAA,WAAA,GAAA,KAAA,SAAA,IAAA,SAAA,SAAA,EAAA,GAAA,GAAA,UAAA,EAAA,KAAA,MAAA,EAAA,IAAA,MAAA,UAAA,EAAA,MAAA,aAAA,EAAA,KAAA,KAAA,KAAA,EAAA,IAAA,WAAA,EAAA,MAAA,KAAA,KAAA,KAAA,IAAA,EAAA,IAAA,KAAA,OAAA,SAAA,KAAA,KAAA,OAAA,WAAA,EAAA,MAAA,IAAA,KAAA,KAAA,GAAA,GAAA,OAAA,SAAA,GAAA,IAAA,IAAA,EAAA,KAAA,WAAA,OAAA,EAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,KAAA,WAAA,GAAA,GAAA,EAAA,aAAA,EAAA,OAAA,KAAA,SAAA,EAAA,WAAA,EAAA,UAAA,EAAA,GAAA,IAAA,MAAA,SAAA,GAAA,IAAA,IAAA,EAAA,KAAA,WAAA,OAAA,EAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,KAAA,WAAA,GAAA,GAAA,EAAA,SAAA,EAAA,CAAA,IAAA,EAAA,EAAA,WAAA,GAAA,UAAA,EAAA,KAAA,CAAA,IAAA,EAAA,EAAA,IAAA,EAAA,GAAA,OAAA,GAAA,MAAA,IAAA,MAAA,0BAAA,cAAA,SAAA,EAAA,EAAA,GAAA,OAAA,KAAA,SAAA,CAAA,SAAA,EAAA,GAAA,WAAA,EAAA,QAAA,GAAA,SAAA,KAAA,SAAA,KAAA,SAAA,GAAA,IAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,oBAAA,QAAA,EAAA,OAAA,WAAA,EAAA,cAAA,IAAA,EAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,KAAA,GAAA,GAAA,iBAAA,EAAA,OAAA,CAAA,IAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,KAAA,IAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,MAAA,GAAA,YAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,QAAA,QAAA,GAAA,KAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,WAAA,IAAA,EAAA,KAAA,EAAA,UAAA,OAAA,IAAA,QAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,EAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,GAAA,OAAA,MAwBA,IACIG,EACAC,EACAC,EAHAC,EAAS,EAMPC,EAAeC,SAASC,uBAAuB,aAAa,GAC5DC,EAAoBF,SAASC,uBAAuB,mBAAmB,GACvEE,EAAYH,SAASC,uBAAuB,eAG5CG,EAAsBJ,SAASK,cAAc,OACnDD,EAAoBE,UAAUC,IAAI,qBAClCL,EAAkBM,YAAYJ,GAC9B,IAAMK,EAAqBT,SAASK,cAAc,OAClDD,EAAoBI,YAAYC,GAEhCL,EAAoBM,MAAMC,QAAU,OAIpC,IAAMC,EAAqBZ,SAASK,cAAc,OAClDO,EAAmBN,UAAUC,IAAI,oBACjCL,EAAkBM,YAAYI,GAC9B,IAAMC,EAAoBb,SAASK,cAAc,OACjDO,EAAmBJ,YAAYK,GAE/BD,EAAmBF,MAAMC,QAAU,OAGnC,IAAMG,EAAed,SAASC,uBAAuB,aAAa,GAG5Dc,EAAwBf,SAASC,uBACrC,uBACA,GAGIe,EAAgBd,EAAkBD,uBAAuB,cAAc,GAEvEgB,EAA+BjB,SAASK,cAAc,OAC5DW,EAAcR,YAAYS,GAC1B,IAAMC,EAAsBlB,SAASK,cAAc,UACnDW,EAAcR,YAAYU,GAG1B,IAAMC,EAAqBnB,SAASK,cAAc,OAClDc,EAAmBb,UAAUC,IAAI,mBACjCL,EAAkBM,YAAYW,GAG9B,IAAMC,EAAelB,EAAkBD,uBAAuB,cAAc,GACtEoB,EAAYrB,SAASK,cAAc,QACzCgB,EAAUf,UAAUC,IAAI,WACxBa,EAAaZ,YAAYa,GACzB,IAAMC,EAAYtB,SAASK,cAAc,QACzCiB,EAAUhB,UAAUC,IAAI,WACxBa,EAAaZ,YAAYc,GAGzB,IAAMC,EAAerB,EAAkBD,uBAAuB,aAAa,GAGrEuB,EAAgBtB,EAAkBD,uBAAuB,cAAc,GAGvEwB,EACJvB,EAAkBD,uBAAuB,eAAe,GACpDyB,EACJxB,EAAkBD,uBAAuB,gBAAgB,GACrD0B,EACJzB,EAAkBD,uBAAuB,iBAAiB,GAGtD2B,EAAoB5B,SAASK,cAAc,QACjDuB,EAAkBtB,UAAUC,IAAI,oBAChCkB,EAAejB,YAAYoB,GAG3B,IAAMC,EAAoB7B,SAASK,cAAc,QACjDwB,EAAkBvB,UAAUC,IAAI,oBAChCkB,EAAejB,YAAYqB,GAG3B,IAAMC,EAAqB9B,SAASK,cAAc,QAClDyB,EAAmBxB,UAAUC,IAAI,qBACjCkB,EAAejB,YAAYsB,GAG3B,IAAMC,EAAkB/B,SAASK,cAAc,QAC/C0B,EAAgBzB,UAAUC,IAAI,kBAC9BoB,EAAiBnB,YAAYuB,GAG7B,IAAMC,EAAmBhC,SAASK,cAAc,QAChD2B,EAAiB1B,UAAUC,IAAI,mBAC/BoB,EAAiBnB,YAAYwB,GAG7B,IAAMC,EAAgBjC,SAASK,cAAc,QAC7C4B,EAAc3B,UAAUC,IAAI,eAC5BoB,EAAiBnB,YAAYyB,GAG7B,IAAMC,EAAelC,SAASK,cAAc,QAC5C6B,EAAa5B,UAAUC,IAAI,cAC3BmB,EAAgBlB,YAAY0B,GAG5B,IAAMC,EAAqBnC,SAASK,cAAc,QAClD8B,EAAmB7B,UAAUC,IAAI,qBACjCmB,EAAgBlB,YAAY2B,GAG5B,IAAMC,EAA0BlC,EAAkBD,uBAChD,yBACA,GACIoC,EAAuBrC,SAASK,cAAc,OACpDgC,EAAqB/B,UAAUC,IAAI,sBACnC8B,EAAqBC,aAAa,MAAO,gCACzCD,EAAqBC,aAAa,MAAO,uBACzCF,EAAwBG,OAAOF,GAI/B,IAAMG,EACJtC,EAAkBD,uBAAuB,eAAe,GACpDwC,EACJzC,SAASC,uBAAuB,kBAAkB,GAGpDwC,EAAsB/B,MAAMC,QAAU,OAEtC,IAAM+B,EACJ1C,SAASC,uBAAuB,mBAAmB,GAErDyC,EAAuBhC,MAAMC,QAAU,OAEvC,IAAMgC,EAA8B3C,SAASC,uBAC3C,yBACA,GAEF0C,EAA4BjC,MAAMC,QAAU,OAG5C,IAAMiC,EAAI,WAAA,IAAG,EAAA,EAAA,IAAA,KAAA,SAAA,IAAA,IAAA,EAAA,EAAA,OAAA,IAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EAAA,OAAA,EAAA,KAAA,EACLC,EAAK/C,GAAO,KAAA,EAElB,EACqBK,EAAAA,GAAS,IAA9B,IAAgC,EAAA,MAAA,EAAA,EAAA,KAAA,MAAf,EAAA,MACN2C,iBAAiB,QAAO,WAAA,IAAE,EAAA,EAAA,IAAA,KAAA,SAAOC,EAAAA,GAAC,OAAA,IAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EAEzC/B,EAAcsB,aAAa,MAAO,8BAClCtB,EAAcsB,aAAa,SAAU,8BACrCpB,EAAoBoB,aAAa,MAAO,8BACxCrB,EAA6BqB,aAC3B,MACA,8BAGFvC,EAAaW,MAAMsC,UAAY,gBAE/B5C,EAAoBM,MAAMC,QAAU,OACpCC,EAAmBF,MAAMC,QAAU,OAEnCkC,EADA/C,EAASiD,EAAEE,OAAOC,aAAa,iBAClB,KAAA,EAAA,IAAA,MAAA,OAAA,EAAA,SAAA,MACd,OAAA,SAAA,GAAA,OAAA,EAAA,MAAA,KAAA,YAhBgC,IAiBlC,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAAA,KAAA,EAAA,IAAA,MAAA,OAAA,EAAA,SAAA,MACF,OAvBKN,WAAI,OAAA,EAAA,MAAA,KAAA,YAAA,GAyBH,SAEQC,EAAI,GAAA,OAAA,GAAA,MAAA,KAAA,WAAA,SAAA,KAsElB,OAtEkB,GAAnB,EAAA,IAAA,KAAA,SAAoB/C,EAAAA,GAAM,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EAAA,OAAA,EAAA,KAAA,GACP,EAAAlB,EAAc,iBAAC,EAAA1B,EAAS,WAAC4C,IAAQ,KAAA,EAA1C,OAARH,EAAQ,EAAA,KAAA,EAAA,KAAA,GACU,EAAAf,EAAc,iBAAC,EAAArB,EAAU,eAAG,KAAA,EAArC,OAATqC,EAAS,EAAA,KAAA,EAAA,KAAA,GACa,EAAAhB,EAAc,iBAAC,EAAApB,EAAc,mBAAG,KAAA,EAAtDqC,EAAa,EAAA,KAGTF,GAAYC,IACdG,EAAaW,MAAMsC,UAAY,kBAE/B5C,EAAoBM,MAAMC,QAAU,OACpCC,EAAmBF,MAAMC,QAAU,QACpC,EAGChB,EAASP,KAAK+D,UAAUC,KADlBC,EAAAA,EAAAA,UAAWC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,UAAWC,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,QAIpDC,EAqBEL,EArBFK,iBACAC,EAoBEN,EApBFM,YACAC,EAmBEP,EAnBFO,YACAC,EAkBER,EAlBFQ,iBACAC,EAiBET,EAjBFS,iBACAC,EAgBEV,EAhBFU,aACAC,EAeEX,EAfFW,aACAC,EAcEZ,EAdFY,WACAC,EAaEb,EAbFa,WACAC,EAYEd,EAZFc,YACAC,EAWEf,EAXFe,QACAC,EAUEhB,EAVFgB,UACAC,EASEjB,EATFiB,aACAC,EAQElB,EARFkB,mBACAC,EAOEnB,EAPFmB,cACAC,EAMEpB,EANFoB,WACAC,EAKErB,EALFqB,YACAC,EAIEtB,EAJFsB,kBACAC,EAGEvB,EAHFuB,kBACAC,EAEExB,EAFFwB,qBACAC,EACEzB,EADFyB,mBAGFC,GACErB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAb,EACAE,EACAY,EACAC,EACAC,EACAb,EACAC,EACA7D,EACA0E,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACArB,EACA7D,GACA,KAAA,GAAA,IAAA,MAAA,OAAA,EAAA,SAAA,OACH,MAAA,KAAA,WAED,SAASmF,GACPrB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAb,EACAE,EACAY,EACAC,EACAC,EACAb,EACAC,EACA7D,EACA0E,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACArB,EACA7D,GAEAoF,GACEtB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEFiB,GAAwBvB,GACxBwB,GAAkBjB,GAClBkB,GAAiB/B,GACjBgC,GAAa9B,GACb+B,GAAkBnB,GAClBoB,GAAYvB,EAAcI,EAAaN,EAAkBO,GACzDmB,GAAYhC,EAASiC,aACrBC,GAAajC,EAAO7D,EAAUR,KAAK+D,UAAUM,OAC7CkC,GACErB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEFa,GAAelC,EAAS7D,EAAcT,KAAK+D,UAAUE,WACrDwC,GAAoBxC,GACpByC,GAAoBzC,GAOtB,SAASgC,GAAa9B,GAEpBvC,EAAcsB,aAAa,MAAO3D,EAAS,UAAG4E,EAAY,SAC1DvC,EAAcsB,aAAa,SAAU3D,EAAS,UAAG4E,EAAY,QAC7DtC,EAA6BqB,aAC3B,MACA3D,EAAS,UAAG4E,EAAY,QAE1BrC,EAAoBoB,aAAa,MAAO3D,EAAS,UAAG4E,EAAY,SAChErC,EAAoBoB,aAAa,OAAQ,cAO3C,SAASkD,GAAYC,GACnBlE,EAAawE,UAAYN,EAQ3B,SAASC,GAAajC,EAAO7D,GAC3B4B,EAAcuE,UAAY,GAAG,IAEP,EAALtC,EAAAA,EAAAA,GAAK,IAAtB,IAAwB,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAA,IAAfuC,EAAI,EAAA,MACLC,EAAejG,SAASK,cAAc,QAC5C4F,EAAa3F,UAAUC,IAAI,cAC3B0F,EAAaF,UAAYC,EAAa,OAAI,IAC1CxE,EAAchB,YAAYyF,IAC3B,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KAUH,SAASV,GAAYvB,EAAcI,EAAaN,EAAkBO,GAGhE,IAAM6B,EAAKpI,EAAW,YAAGkG,EAAejG,EAAO,QACzCoI,GACJ/B,EACAJ,EAAehG,EAA0B,4BACzCoI,QAAQ,GAGJC,EAAKpI,EAAS,UAAG6F,EAAmB5F,EAAO,QAC3CoI,GAASjC,EAAUP,EAAmB3F,EAAwB,0BAAEiI,QACpE,GAGF/E,EAAU0E,UAAYG,EAAK,OAASC,EACpC7E,EAAUyE,UAAYM,EAAK,OAASC,EAOtC,SAAShB,GAAkBnB,GACzBhD,EAAmB4E,UAAY,GAE/B,IAAK,IAAIQ,EAAI,EAAGA,GAAKpC,EAAYoC,IAAK,CACpC,IAAMC,EAAmBxG,SAASK,cAAc,QAChDmG,EAAiBlG,UAAUC,IAAI,uBAC/BY,EAAmBX,YAAYgG,IAcnC,SAASvB,GACPtB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEAnD,EAAaiF,UAAY,GAEzB,IAAMU,EAAqBzG,SAASK,cAAc,OAClDoG,EAAmBnG,UAAY,CAAC,sBAEhC,IAAMoG,EAAqB1G,SAASK,cAAc,OAClDqG,EAAmBpG,UAAY,CAAC,sBAEhC,IAAMqG,EAAqB3G,SAASK,cAAc,OAClDsG,EAAmBrG,UAAY,CAAC,sBAEhCmG,EAAmBV,UAAe/B,GAAAA,OAAAA,EAAuBC,YAAAA,OAAAA,EAAamC,QACpE,GACQ,WACVM,EAAmBX,UAAejC,GAAAA,OAAAA,EAA2BC,YAAAA,OAAAA,EAAiBqC,QAC5E,GACQ,WACVO,EAAmBZ,UAAenC,GAAAA,OAAAA,EAAsBC,YAAAA,OAAAA,EAAYuC,QAClE,GACQ,WAGe,QAArBzC,GACF8C,EAAmBnG,UAAUC,IAAI,eACjCO,EAAaN,YAAYiG,GACzB3F,EAAaN,YAAYkG,GACzB5F,EAAaN,YAAYmG,IACK,QAArBhD,GACT+C,EAAmBpG,UAAUC,IAAI,eACjCO,EAAaN,YAAYkG,GACzB5F,EAAaN,YAAYmG,GACzB7F,EAAaN,YAAYiG,IACK,QAArB9C,IACTgD,EAAmBrG,UAAUC,IAAI,eACjCO,EAAaN,YAAYmG,GACzB7F,EAAaN,YAAYiG,GACzB3F,EAAaN,YAAYkG,IAQ7B,SAASxB,GAAwBvB,GAC/BlD,EAAmB6B,aACjB,MACa7E,aAAAA,OAAAA,EAAiB,kBAACkG,GAChC,SAOH,SAASwB,GAAkBjB,GACzBrD,EAAkByB,aAChB,MACY4B,YAAAA,OAAAA,EAAW0C,cACxB,SAgBH,SAASjB,GACPrB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGA,IAAM8B,EAAgBjC,GAAAA,OAAAA,EAAuBC,OAAAA,OAAAA,GAEvCiC,EAAYhC,GAAAA,OAAAA,EAA0BC,OAAAA,OAAAA,GAG5CnD,EAAkBmE,UAAYc,EAC9BhF,EAAkBkE,UAAYrB,EAAW0B,QAAQ,GACjDtE,EAAmBiE,UAAYpB,EAG/BzC,EAAa6D,UAAYtB,EAAc2B,QAAQ,GAC/CjE,EAAmB4D,UAAYvB,EAAqB,IAGpDzC,EAAgBgE,UAAYxB,EAAa6B,QAAQ,GACjDpE,EAAiB+D,UAAYzB,EAC7BrC,EAAc8D,UAAYe,EAO5B,SAAS1B,GAAiB/B,GACxBtC,EAAsBgF,UAAY,GAOlC,IAoBuC,EApBjCgB,GALN1D,EAAYA,EAAU2D,OACpB,SAACC,GAAO,MAAoC,mBAA/BA,EAAiB,QAAQ,QAIFD,OAAO,SAACC,GAC5C,OACGA,EAAiB,QAAQ,KAAsB,qBAC/CA,EAAiB,QAAQ,KAAoB,mBAK5CC,EAA8B7D,EAAU2D,OAC5C,SAACT,GAAC,OACAA,EAAW,QAAQ,KAAsB,oBACzCA,EAAW,QAAQ,KAAqB,oBAC1C,GAEIY,EAA4B9D,EAAU2D,OAC1C,SAACT,GAAC,IAAA,EAAA,OACA,QAAAA,EAAAA,EAAW,QAAY,gBAAvB,IAAA,OAAA,EAAA,EAA0Ba,mBAC1Bb,EAAW,QAAQ,KAAoB,mBACzC,GAEkBQ,EAAAA,EAAAA,GAAmB,IAAvC,IAAyC,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAA,IAAhCE,EAAO,EAAA,MACRI,EAAiBrH,SAASK,cAAc,OAC9CgH,EAAe/E,aAAa,UAAwBzE,aAAAA,OAAAA,EAAW,YAAI,MACnEwJ,EAAe/E,aACb,MACG5D,GAAAA,OAAAA,EAAmB,oBAAIuI,KAAAA,OAAAA,EAAiB,QAAQ,KACpD,SACDI,EAAe/E,aAAa,eAAgB2E,EAAiB,QAAQ,MAErEI,EAAe/G,UAAUC,IAAI,gBACzB0G,EAAiB,QAAQ,KAAc,YACzCI,EAAe/G,UAAUC,IAAI,2BAE/BQ,EAAsBP,YAAY6G,IAEpC,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IACAhF,EAAqBC,aACnB,MACqB,qBAAA,OAAE4E,EAA8B,EAAI,EACvD,aAAA,OAAEC,EAA4B,EAAI,EAErC,SAuIH,SAASvB,GAAelC,EAAS7D,GAC/B4C,EAAsBsD,UAAY,sCAEN,IACF,EAAPrC,EAAAA,EADnBA,EAAUA,EAAQ4D,WACQ,IAAA,IAAE,EAAA,WAAA,IAAA,EAAA,EAAnBC,EAAM,EAAA,MACPC,EAAiBxH,SAASK,cAAc,QAC9CoC,EAAsBjC,YAAYgH,GAClC,IAAMC,EAAiB5H,EAAc6H,KACnC,SAACT,GAAO,OAAKA,EAAY,KAAMM,EAAkB,YAEnDC,EAAezB,UAC8B,QAA3C0B,EAAA,QAAAA,EAAAA,EAAyB,gBAAzB,IAAA,OAAA,EAAA,EAA4BhC,mBAAe,IAAA,EAAA,EAAA,UAC7C+B,EAAelH,UAAY,CAAoBiH,mBAAAA,OAAAA,EAAa,QAR9D,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,IASC,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KA0CH,SAAS1B,GAAoBxC,GAC3B,IAE+B,EAAjBsE,EAAAA,EADZzH,EAAkBD,uBAAuB,iBACZ,IAAA,IAAE,EAAA,WAAA,IAAxBsG,EAAC,EAAA,MACRA,EAAEzD,iBAAiB,YAAa,SAACC,GAC/B,IAAM6E,EAAc7E,EAAEE,OAEtBP,EAAuBqD,UAAY8B,GACjCD,EAAY1E,aAAa,gBACzBG,GAGFyE,GAAoBF,EAAa,mBAqDjCrB,EAAEzD,iBAAiB,WAAY,SAACC,GAC9BL,EAAuBhC,MAAMC,QAAU,YA/D7C,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,IAkEC,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KAhpBHiC,IAqiBAJ,EAAeM,iBAAiB,YAAa,SAACC,GAI5C+E,GAFmB/E,EAAEE,OAEW,iBAAkB,UA6BpDT,EAAeM,iBAAiB,WAAY,SAACC,GAC3CN,EAAsB/B,MAAMC,QAAU,SA8ExC,IAAMkH,GAAoB,SAACE,EAAa1E,GACtC,IAeI2E,EAZyCf,EAH7B5D,EAAUqE,KACxB,SAACT,GAAO,OAAKA,EAAiB,QAAQ,OAAMc,IAEgB,QAAtDE,EAAAA,EAAAA,KAAMzE,EAAAA,EAAAA,SAAU0E,EAAAA,EAAAA,WAAYC,EAAAA,EAAAA,KAElCC,EAMED,EANFC,SACAC,EAKEF,EALFE,SACAC,EAIEH,EAJFG,eACAC,EAGEJ,EAHFI,YACAC,EAEEL,EAFFK,eACAC,EACEN,EADFM,cAEmCjF,EAAAA,GAAY,GAAzCiC,EAAAA,EAAAA,YAAaiD,EAAAA,EAAAA,YACfC,EAAajK,GAAAA,OAAAA,EAAmB,oBAAIuJ,KAAAA,OAAAA,EAAU,QAepD,OAXAD,EAAcY,GACZH,EACAJ,EACAD,EACAF,EACAI,EACAC,EACAC,EACAE,GAK4BC,iEAAAA,OAAAA,EAA+B9K,0BAAAA,OAAAA,EAAW,YACjC4H,kDAAAA,OAAAA,EAGnCuC,mCAAAA,OAAAA,EAAW,qBAOjB,SAASY,GACPH,EACAJ,EACAD,EACAF,EACAI,EACAC,EACAC,GAEA,IAiBIK,EAlBJH,EAAc,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAGRI,EAAsB,OAAbT,EAAoBA,EAASU,KAAK,OAAS,KAEpDC,EAAsB,OAAbZ,EAAoBA,EAASW,KAAK,OAAS,KAEtDE,EAAa,GACjB,GAAIf,EAAY,CAAA,IACa,EAAVA,EAAAA,EAAAA,GAAU,IAA3B,IAA6B,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAA,IAApBgB,EAAI,EAAA,MACHjB,EAAgBiB,EAAhBjB,KAAMkB,EAAUD,EAAVC,MACRC,EAAWnB,EAAKoB,WAAW,IAAK,KAAKC,cACrCC,EAAYJ,EAAME,WAAW,IAAK,OACxCJ,GAA8CG,gCAAAA,OAAAA,EAA8CG,uCAAAA,OAAAA,EAAyB,mBACtH,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KAMDV,EADqB,IAAnBP,EACY,UACc,IAAnBA,EACK,WAEA,YAGhB,IAAMkB,EACY,QAAhBjB,EACwDA,oDAAAA,OAAAA,EACpD,UAAA,GAEAkB,EAAcnB,EACiDO,iEAAAA,OAAAA,EAAgB,MAAA,QAAA,EAAAxJ,EAAU,YACzFjB,EAAW,YAACkK,GACZ,IACA,GAEF,iBAAA,GAEEoB,EAAqBlB,EAGrB,yEAAA,QAAA,EAAAnJ,EAAU,YAAChB,EAAqB,sBAACmK,GAAiB,IAAK,GAEzD,qBAAA,GAGEmB,EAAoBlB,EAEiDmB,gFAAAA,OAH/B,IAAlBnB,EAAsB,YAAc,UAIxDnK,cAAAA,OAAAA,EAAmB,oBAACmK,GAGtB,uBAAA,GAEJ,MACIiB,mCAAAA,OAAAA,EACAF,UAAAA,OAAAA,EACAC,UAAAA,OAAAA,EACAE,UAAAA,OAAAA,EAGFjB,oBAAAA,OAAAA,EAA4CA,8BAAAA,OAAAA,EAAY,GAAa,UAAA,GACrER,QAAAA,OAAAA,EAA2Ce,8BAAAA,OAAAA,EAAsB,WAAA,GAGjEZ,UAAAA,OAAa,OAAbA,GAAkC,OAAbD,EAIjBC,yCAAAA,OAAa,OAAbA,EAGmCS,8EAAAA,OAAAA,EAG/B,6BAAA,GAGJV,YAAAA,OAAa,OAAbA,EAGoFY,+HAAAA,OAAAA,EAGhF,6BAAA,GAIJ,sBAAA,IAyCR,SAASlD,GAAoBzC,GAC3BV,EAA4BoD,UAAY,GAExC,IAAMmB,EAA8B7D,EAAU2D,OAC5C,SAACT,GAAC,IAAA,EAAA,EAAA,OACAA,EAAW,QAAQ,KAAsB,oBACxCA,EAAW,QAAQ,KAAqB,qBACtC,QAAAA,EAAAA,EAAW,QAAY,gBAAvB,IAAA,OAAA,EAAA,EAA0BsD,sBACzB,QAAAtD,EAAAA,EAAW,QAAY,gBAAvB,IAAA,OAAA,EAAA,EAA0BmC,YAAY,OAC5C,GAEIvB,EAA4B9D,EAAU2D,OAC1C,SAACT,GAAC,IAAA,EAAA,OACAA,EAAW,QAAQ,KAAoB,mBACvC,QAAAA,EAAAA,EAAW,QAAY,gBAAvB,IAAA,OAAA,EAAA,EAA0Ba,oBAC5B,GAEF,OAAQzE,EAA4BoD,UAChC+D,SAAAA,OAAAA,GAAuB5C,EAA6B,WAEpD4C,2CAAAA,OAAAA,GAAuB3C,EAA2B,SACrD,QAzDH9E,EAAqBS,iBAAiB,YAAa,SAACC,GAGlD+E,GAFyB/E,EAAEE,OAEW,wBAAyB,UA4BjEZ,EAAqBS,iBAAiB,WAAY,SAACC,GACjDJ,EAA4BjC,MAAMC,QAAU,SA4B9C,IAAMmJ,GAAyB,SAAC7C,EAAS8C,GAEvC,IAAK9C,EACH,MACgB8C,uBAAAA,OAAAA,EAEeA,4FAAAA,OAAAA,EAAgCA,iBAAAA,OAAAA,EAEvCA,kFAAAA,OAAAA,EAAgB,4IAQ1C,IAeIC,EAEAhC,EAjByCf,EAAAA,EAAiB,QAAtDkB,EAAAA,EAAAA,KAAM3E,EAAAA,EAAAA,SAAUyE,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,WAE5B+B,EAQE9B,EARF8B,kBACAC,EAOE/B,EAPF+B,iBACA9B,EAMED,EANFC,SACAC,EAKEF,EALFE,SACAC,EAIEH,EAJFG,eACAC,EAGEJ,EAHFI,YACAE,EAEEN,EAFFM,cACAD,EACEL,EADFK,eAGAhF,EAAAA,GAAY,GADNqG,EAAAA,EAAAA,mBAAoBnB,EAAAA,EAAAA,YAAajD,EAAAA,EAAAA,YAAa2B,EAAAA,EAAAA,iBAEhDuB,EAAajK,GAAAA,OAAAA,EAAmB,oBAAIuJ,KAAAA,OAAAA,EAAU,QAGhDkC,EAAmB,UA2BvB,MAxByB,YAArBJ,IACFC,EACEC,GAAqBJ,EACjBA,EACAnB,EACNyB,EACEF,GAAqBJ,EAAqB,UAAY,OAEjC,UAArBE,IACFI,EAAmBD,EAAmB,MAAQ,WAGvB,QAArBC,IACFnC,EAAcY,GACZH,EACAJ,EACAD,EACAF,EACAI,EACAC,EACAC,IAKcuB,uBAAAA,OAAAA,EAEYA,yFAAAA,OAAAA,EAAgCA,iBAAAA,OAAAA,EAEpCA,kFAAAA,OAAAA,EAKcpB,0HAAAA,OAAAA,EAExBlD,qEAAAA,OAAAA,EAAqB0E,WAAAA,OAAAA,EAEzBJ,iCAAAA,OAAqB,YAArBA,EACIC,EACA5C,EAEJY,sBAAAA,OAAAA,EAAW,yDAOnBoC,GAAS,SAACC,GAUd,MAAO,CACLC,UAFED,EAPFC,UAUAC,UAHEF,EANFE,UAUAC,WAJEH,EALFG,WAUAC,aALEJ,EAJFI,aAUAC,YANEL,EAHFK,YAUAC,MAPEN,EAFFM,MAUAC,OAREP,EADFO,SAaJ,SAAS9C,GACP7E,EACA4H,GAEA,IADAC,EAAwB,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,QAEpBT,EAAIpH,EAEN8H,EAAM,GACFC,EAAmB/H,EAAoB,YACvCgI,EAAoBhI,EAAqB,aACzCiI,EAAgBC,OAAOC,QACvBC,EAAgBF,OAAOG,QAC7BP,EAAIQ,KAAKnB,GAAOC,IAChB,GACEA,EAAIA,EAAEmB,aACNjF,EACAwE,EAAIQ,KAAKnB,GAAOC,UACTA,EAAEmB,cAEX,IASIC,EAAUC,EATRC,EAA0BZ,EAAIa,OAClC,SAACC,EAAOC,GAAG,OAAKD,EAAQC,EAAItB,YAC5B,GAEIuB,EAAyBhB,EAAIa,OACjC,SAACC,EAAOC,GAAG,OAAKD,EAAQC,EAAIvB,WAC5B,GAIIyB,EAAYhM,SAASC,uBAAuB4K,GAAe,GACjEmB,EAAUtL,MAAMC,QAAUmK,EAC1B,IAAMmB,EAAgBD,EAAUvB,aAC1ByB,EAAeF,EAAUtB,YAG3BqB,EAAyBb,GAAiBe,IAC5CP,EAAWK,EAAyBE,EAAgB,KAGhDN,EAA0BN,GAAiBa,EAAe,IAC5DT,EACEE,EACAX,EAAmB,EACnBkB,EAAe,EACf,MAGAP,EAA0BN,EAAgBa,EAAe,IAC3DT,EAAWE,EAA0B,MAIrCR,OAAOgB,YACJR,EAA0BN,EAAgBL,GAC7CkB,EAAe,IAEfT,EACEE,EAA0BV,EAAoBiB,EAAe,OAK/DH,EAAyBb,EAAgBe,EAAgB,IAC3DP,EAAWK,EAAyB,KAGlCZ,OAAOgB,YACJR,EAA0BN,EAAgBL,IAC7CkB,IAEAT,EAAWE,EAA0BX,EAAmB,MAIxDG,OAAOgB,YACJR,EAA0BN,EAAgBL,GAC7CkB,IAEAT,EAAWE,EAA0BO,EAAe,OAMtDH,EAAyBb,EAAgBe,GACzCF,EAAyBb,GAAiBe,EAAgB,IAE1DP,EACEK,EAAyBd,EAAoB,EAAIgB,EAAgB,EAAI,KAIrEd,OAAOgB,YACJR,EAA0BN,EAAgBL,IAC7CkB,IAEAT,EAAWE,EAA0BX,EAAmB,MAKxDG,OAAOgB,YACJR,EAA0BN,EAAgBL,GAC7CkB,IAEAT,EAAWE,EAA0BO,EAAe,OAMtDf,OAAOiB,aACJL,EAAyBb,EAAgBD,GAC5CgB,EAAgB,IAEhBP,EACEK,EAAyBd,EAAoBgB,EAAgB,KAI7Dd,OAAOgB,YACJR,EAA0BN,EAAgBL,IAC7CkB,IAEAT,EAAWE,EAA0BX,EAAmB,MAKxDG,OAAOgB,YACJR,EAA0BN,EAAgBL,GAC7CkB,IAEAT,EAAWE,EAA0BO,EAAe,OAKpDH,EAAyBb,EAAgB,IAC3CQ,EAAWK,EAAyBd,EAAoB,KAGpDU,EAA0BN,GAAiBa,EAAe,IAC5DT,EACEE,EACAX,EAAmB,EACnBkB,EAAe,EACf,MAGAP,EAA0BN,EAAgBa,EAAe,IAC3DT,EAAWE,EAA0B,MAIrCR,OAAOgB,YACJR,EAA0BN,EAAgBL,GAC7CkB,EAAe,IAEfT,EACEE,EAA0BV,EAAoBiB,EAAe,OAInEF,EAAUtL,MAAM2L,KAAOZ,EACvBO,EAAUtL,MAAM4L,IAAMZ,EAEtBa,QAAQC,IAAItB","file":"index_card.fdef752c.js","sourceRoot":"..","sourcesContent":["export const heroQuery = (id) => {\r\n  return JSON.stringify({\r\n    query: `{\r\n     constants {\r\n       hero(id: ${id}) {\r\n         id\r\n         name\r\n         displayName\r\n         shortName\r\n         aliases\r\n         gameVersionId\r\n         language {\r\n           displayName\r\n           lore\r\n           hype\r\n         }\r\n         abilities {\r\n           slot\r\n           gameVersionId\r\n           abilityId\r\n           ability {\r\n             id\r\n             name\r\n             uri\r\n             language {\r\n               displayName\r\n               description\r\n               attributes\r\n               lore\r\n               aghanimDescription\r\n               shardDescription\r\n               notes\r\n             }\r\n             stat {\r\n               abilityId\r\n               type\r\n               behavior\r\n               unitTargetType\r\n               unitTargetTeam\r\n               unitTargetFlags\r\n               unitDamageType\r\n               spellImmunity\r\n               modifierSupportValue\r\n               modifierSupportBonus\r\n               isOnCastbar\r\n               isOnLearnbar\r\n               fightRecapLevel\r\n               isGrantedByScepter\r\n               hasScepterUpgrade\r\n               maxLevel\r\n               levelsBetweenUpgrades\r\n               requiredLevel\r\n               hotKeyOverride\r\n               displayAdditionalHeroes\r\n               castRange\r\n               castRangeBuffer\r\n               castPoint\r\n               channelTime\r\n               cooldown\r\n               damage\r\n               manaCost\r\n               isUltimate\r\n               duration\r\n               charges\r\n               chargeRestoreTime\r\n               isGrantedByShard\r\n               dispellable\r\n             }\r\n             attributes {\r\n               name\r\n               value\r\n               linkedSpecialBonusAbilityId\r\n               requiresScepter\r\n             }\r\n             isTalent\r\n           }\r\n         }\r\n         roles {\r\n           roleId\r\n           level\r\n         }\r\n         talents {\r\n           abilityId\r\n           slot\r\n         }\r\n         stats {\r\n           enabled\r\n           heroUnlockOrder\r\n           team\r\n           cMEnabled\r\n           newPlayerEnabled\r\n           attackType\r\n           startingArmor\r\n           startingMagicArmor\r\n           startingDamageMin\r\n           startingDamageMax\r\n           attackRate\r\n           attackAnimationPoint\r\n           attackAcquisitionRange\r\n           attackRange\r\n           primaryAttribute\r\n           strengthBase\r\n           strengthGain\r\n           intelligenceBase\r\n           intelligenceGain\r\n           agilityBase\r\n           agilityGain\r\n           mpRegen\r\n           moveSpeed\r\n           moveTurnRate\r\n           hpBarOffset\r\n           visionDaytimeRange\r\n           visionNighttimeRange\r\n           complexity\r\n         }\r\n       }\r\n     }\r\n   }\r\n   `\r\n  });\r\n};\r\n","export const rolesQuery = () => {\r\n  return JSON.stringify({\r\n    query: `{\r\n      constants {\r\n        roles {\r\n          roleId\r\n          name\r\n          langKey\r\n        } \r\n      }\r\n    }\r\n    `\r\n  });\r\n};\r\n","export const abilitiesQuery = () => {\r\n  return JSON.stringify({\r\n    query: `{\r\n      constants {\r\n        abilities {\r\n          id,\r\n          language {\r\n            displayName\r\n          },\r\n        }\r\n    \r\n      }\r\n    }\r\n`\r\n  });\r\n};\r\n","export const PRIMARY_ATTR_LIST = {\r\n  str: \"hero_strength\",\r\n  int: \"hero_intelligence\",\r\n  agi: \"hero_agility\",\r\n};\r\n\r\nexport const IMG_ONERROR = \"./images/Dota2Logo.svg\";\r\n\r\nexport const BASE_HEALTH = 200;\r\nexport const HP_UNIT = 20;\r\nexport const BOUNUS_HEALTH_REGENERATION = 0.1;\r\n\r\nexport const BASE_MANA = 75;\r\nexport const MP_UNIT = 12;\r\nexport const BOUNUS_MANA_REGENERATION = 0.05;\r\n\r\n// map damage type\r\nexport const DAMAGE_TYPE = {\r\n  0: \"DAMAGE_TYPE_NONE\",\r\n  1: \"DAMAGE_TYPE_PHYSICAL\",\r\n  2: \"DAMAGE_TYPE_MAGICAL\",\r\n  4: \"DAMAGE_TYPE_PURE\",\r\n  7: \"DAMAGE_TYPE_ALL\",\r\n  8: \"DAMAGE_TYPE_HP_REMOVAL\",\r\n};\r\n\r\nexport const DOTA_UNIT_TARGET_TEAM = {\r\n  0: \"DOTA_UNIT_TARGET_TEAM_NONE\",\r\n  1: \"DOTA_UNIT_TARGET_TEAM_FRIENDLY\",\r\n  2: \"DOTA_UNIT_TARGET_TEAM_ENEMY\",\r\n  3: \"DOTA_UNIT_TARGET_TEAM_BOTH\",\r\n  4: \"DOTA_UNIT_TARGET_TEAM_CUSTOM\",\r\n};\r\n\r\nexport const SPELL_IMMUNITY_LIST = {\r\n  1: \"Yes\",\r\n  3: \"Yes\",\r\n  4: \"No\",\r\n};\r\n","// here we will store STRATZ token, api url, and hero url\r\n\r\nexport const STRATZ_TOKEN = process.env.STRATZ_TOKEN;\r\nexport const STRATZ_API = \"https://api.stratz.com/graphql\";\r\nexport const STRATZ_HERO_URL = \"https://cdn.stratz.com/images/dota2/heroes\";\r\nexport const STRATZ_ABILITIE_URL =\r\n  \"https://cdn.stratz.com/images/dota2/abilities\";\r\nexport const VIDEO_URL =\r\n  \"https://cdn.cloudflare.steamstatic.com/apps/dota2/videos/dota_react/heroes/renders/\";\r\n","import { STRATZ_TOKEN, STRATZ_API } from \"./config.js\";\r\n\r\nexport // graphql fun\r\nconst getGraphqlData = async (query) => {\r\n  let response = await fetch(STRATZ_API, {\r\n    method: \"post\",\r\n    body: query,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${STRATZ_TOKEN}`,\r\n    },\r\n  });\r\n  let data = await response.json();\r\n  return data;\r\n};\r\n\r\nexport const formatText = (string, splitChart, slicePlacement) => {\r\n  return string.split(splitChart).slice(slicePlacement);\r\n};\r\n","import { heroQuery } from \"./query/hero.js\";\r\nimport { rolesQuery } from \"./query/roles.js\";\r\nimport { abilitiesQuery } from \"./query/abilities.js\";\r\n\r\n// constants\r\nimport {\r\n  PRIMARY_ATTR_LIST,\r\n  IMG_ONERROR,\r\n  BASE_HEALTH,\r\n  HP_UNIT,\r\n  BOUNUS_HEALTH_REGENERATION,\r\n  BASE_MANA,\r\n  MP_UNIT,\r\n  BOUNUS_MANA_REGENERATION,\r\n  DAMAGE_TYPE,\r\n  DOTA_UNIT_TARGET_TEAM,\r\n  SPELL_IMMUNITY_LIST,\r\n} from \"./constants.js\";\r\n\r\nimport { STRATZ_ABILITIE_URL, VIDEO_URL } from \"./config.js\";\r\n\r\n// pipe\r\nimport { getGraphqlData, formatText } from \"./utils.js\";\r\n\r\n// init state\r\nlet heroId = 1;\r\nlet heroData;\r\nlet rolesData;\r\nlet abilitiesData;\r\n\r\n// Dom list\r\nconst heroCardNode = document.getElementsByClassName(\"hero-card\")[0];\r\nconst heroCardFrontNode = document.getElementsByClassName(\"hero-card-front\")[0];\r\nconst heroCards = document.getElementsByClassName(\"heroes-card\");\r\n\r\n// hero primary att\r\nconst heroPrimaryAttrNode = document.createElement(\"div\");\r\nheroPrimaryAttrNode.classList.add(\"hero-primary_attr\");\r\nheroCardFrontNode.appendChild(heroPrimaryAttrNode);\r\nconst heroPrimaryAttrDom = document.createElement(\"img\");\r\nheroPrimaryAttrNode.appendChild(heroPrimaryAttrDom);\r\n// before the card flip, won't show the node\r\nheroPrimaryAttrNode.style.display = \"none\";\r\n\r\n// hero attack type\r\n// it's similar with primary att show right top corner\r\nconst heroAttackTypeNode = document.createElement(\"div\");\r\nheroAttackTypeNode.classList.add(\"hero-attack_type\");\r\nheroCardFrontNode.appendChild(heroAttackTypeNode);\r\nconst heroAttackTypeDom = document.createElement(\"img\");\r\nheroAttackTypeNode.appendChild(heroAttackTypeDom);\r\n// before the card flip, won't show the node\r\nheroAttackTypeNode.style.display = \"none\";\r\n\r\n// for base str, agi, int\r\nconst heroBaseNode = document.getElementsByClassName(\"hero-base\")[0];\r\n\r\n// hero abilities\r\nconst heroAbilitiesListNode = document.getElementsByClassName(\r\n  \"hero-abilities-list\"\r\n)[0];\r\n\r\n// hero video/image\r\nconst heroVideoNode = heroCardFrontNode.getElementsByClassName(\"hero-video\")[0];\r\n// hero video fallback img\r\nconst heroVideoNodeFallbackImgNode = document.createElement(\"img\");\r\nheroVideoNode.appendChild(heroVideoNodeFallbackImgNode);\r\nconst heroVideoSourceNode = document.createElement(\"source\");\r\nheroVideoNode.appendChild(heroVideoSourceNode);\r\n\r\n// hero complexity for card\r\nconst complexityListNode = document.createElement(\"div\");\r\ncomplexityListNode.classList.add(\"complexity-list\");\r\nheroCardFrontNode.appendChild(complexityListNode);\r\n\r\n// hero mp hp\r\nconst heroMpHpNode = heroCardFrontNode.getElementsByClassName(\"hero-mp-hp\")[0];\r\nconst heroHpDom = document.createElement(\"span\");\r\nheroHpDom.classList.add(\"hero-hp\");\r\nheroMpHpNode.appendChild(heroHpDom);\r\nconst heroMpDom = document.createElement(\"span\");\r\nheroMpDom.classList.add(\"hero-mp\");\r\nheroMpHpNode.appendChild(heroMpDom);\r\n\r\n// hero name\r\nconst heroNameNode = heroCardFrontNode.getElementsByClassName(\"hero-name\")[0];\r\n\r\n// hero roles\r\nconst heroRolesNode = heroCardFrontNode.getElementsByClassName(\"hero-roles\")[0];\r\n\r\n// hero info\r\nconst heroAttackNode =\r\n  heroCardFrontNode.getElementsByClassName(\"hero-attack\")[0];\r\nconst heroDefenseNode =\r\n  heroCardFrontNode.getElementsByClassName(\"hero-defense\")[0];\r\nconst heroMobilityNode =\r\n  heroCardFrontNode.getElementsByClassName(\"hero-mobility\")[0];\r\n\r\n// base_attack\r\nconst heroBaseAttackDom = document.createElement(\"span\");\r\nheroBaseAttackDom.classList.add(\"hero-base_attack\");\r\nheroAttackNode.appendChild(heroBaseAttackDom);\r\n\r\n// attack_rate\r\nconst heroAttackRateDom = document.createElement(\"span\");\r\nheroAttackRateDom.classList.add(\"hero-attack_rate\");\r\nheroAttackNode.appendChild(heroAttackRateDom);\r\n\r\n// attack_range\r\nconst heroAttackRangeDom = document.createElement(\"span\");\r\nheroAttackRangeDom.classList.add(\"hero-attack_range\");\r\nheroAttackNode.appendChild(heroAttackRangeDom);\r\n\r\n// trun_rate\r\nconst heroTurnRateDom = document.createElement(\"span\");\r\nheroTurnRateDom.classList.add(\"hero-turn_rate\");\r\nheroMobilityNode.appendChild(heroTurnRateDom);\r\n\r\n// move_speed\r\nconst heroMoveSpeedDom = document.createElement(\"span\");\r\nheroMoveSpeedDom.classList.add(\"hero-move_speed\");\r\nheroMobilityNode.appendChild(heroMoveSpeedDom);\r\n\r\n// vision\r\nconst heroVisionDom = document.createElement(\"span\");\r\nheroVisionDom.classList.add(\"hero-vision\");\r\nheroMobilityNode.appendChild(heroVisionDom);\r\n\r\n// hero armor\r\nconst heroArmorDom = document.createElement(\"span\");\r\nheroArmorDom.classList.add(\"hero-armor\");\r\nheroDefenseNode.appendChild(heroArmorDom);\r\n\r\n// hero magic resist\r\nconst heroMagicResistDom = document.createElement(\"span\");\r\nheroMagicResistDom.classList.add(\"hero-magic_resist\");\r\nheroDefenseNode.appendChild(heroMagicResistDom);\r\n\r\n// part3\r\nconst heroAbilitiesTalentNode = heroCardFrontNode.getElementsByClassName(\r\n  \"hero-abilities-talent\"\r\n)[0];\r\nconst heroScepterShardNode = document.createElement(\"img\");\r\nheroScepterShardNode.classList.add(\"hero-scepter-shard\");\r\nheroScepterShardNode.setAttribute(\"src\", \"/src/images/aghs_scepter.png\");\r\nheroScepterShardNode.setAttribute(\"alt\", \"Dota2 scepter Shard\");\r\nheroAbilitiesTalentNode.append(heroScepterShardNode);\r\n\r\n// talent tooltip\r\n\r\nconst heroTalentNode =\r\n  heroCardFrontNode.getElementsByClassName(\"hero-talent\")[0];\r\nconst heroTalentTooltipNode =\r\n  document.getElementsByClassName(\"talent-tooltip\")[0];\r\n\r\n// default tooltip should not display\r\nheroTalentTooltipNode.style.display = \"none\";\r\n\r\nconst heroAbilityTooltipNode =\r\n  document.getElementsByClassName(\"ability-tooltip\")[0];\r\n\r\nheroAbilityTooltipNode.style.display = \"none\";\r\n\r\nconst heroScepterShardTooltipNode = document.getElementsByClassName(\r\n  \"scepter-shard-tooltip\"\r\n)[0];\r\n\r\nheroScepterShardTooltipNode.style.display = \"none\";\r\n// main()\r\n\r\nconst main = async () => {\r\n  await init(heroId);\r\n\r\n  // after click hero image should update the card\r\n  for (let heroCard of heroCards) {\r\n    heroCard.addEventListener(\"click\", async (e) => {\r\n      // first reset something\r\n      heroVideoNode.setAttribute(\"src\", \"./src/images/Dota2Logo.svg\");\r\n      heroVideoNode.setAttribute(\"poster\", \"./src/images/Dota2Logo.svg\");\r\n      heroVideoSourceNode.setAttribute(\"src\", \"./src/images/Dota2Logo.svg\");\r\n      heroVideoNodeFallbackImgNode.setAttribute(\r\n        \"src\",\r\n        \"./src/images/Dota2Logo.svg\"\r\n      );\r\n      // flip the card to back first\r\n      heroCardNode.style.transform = \"rotateY(0deg)\";\r\n\r\n      heroPrimaryAttrNode.style.display = \"none\";\r\n      heroAttackTypeNode.style.display = \"none\";\r\n      heroId = e.target.getAttribute(\"data-hero-id\");\r\n      init(heroId);\r\n    });\r\n  }\r\n};\r\n\r\nmain();\r\n\r\nasync function init(heroId) {\r\n  heroData = await getGraphqlData(heroQuery(heroId));\r\n  rolesData = await getGraphqlData(rolesQuery());\r\n  abilitiesData = await getGraphqlData(abilitiesQuery());\r\n\r\n  // previous, we have a flip animation style for front and back card\r\n  if (heroData && rolesData) {\r\n    heroCardNode.style.transform = \"rotateY(180deg)\";\r\n\r\n    heroPrimaryAttrNode.style.display = \"flex\";\r\n    heroAttackTypeNode.style.display = \"flex\";\r\n  }\r\n\r\n  const { abilities, stats, shortName, language, roles, talents } =\r\n    heroData.data.constants.hero;\r\n\r\n  const {\r\n    primaryAttribute,\r\n    agilityBase,\r\n    agilityGain,\r\n    intelligenceBase,\r\n    intelligenceGain,\r\n    strengthBase,\r\n    strengthGain,\r\n    attackType,\r\n    complexity,\r\n    hpBarOffset,\r\n    mpRegen,\r\n    moveSpeed,\r\n    moveTurnRate,\r\n    startingMagicArmor,\r\n    startingArmor,\r\n    attackRate,\r\n    attackRange,\r\n    startingDamageMin,\r\n    startingDamageMax,\r\n    visionNighttimeRange,\r\n    visionDaytimeRange,\r\n  } = stats;\r\n\r\n  updateHero(\r\n    primaryAttribute,\r\n    agilityBase,\r\n    agilityGain,\r\n    intelligenceBase,\r\n    intelligenceGain,\r\n    strengthBase,\r\n    strengthGain,\r\n    attackType,\r\n    abilities,\r\n    shortName,\r\n    complexity,\r\n    hpBarOffset,\r\n    mpRegen,\r\n    language,\r\n    roles,\r\n    rolesData,\r\n    moveSpeed,\r\n    moveTurnRate,\r\n    startingMagicArmor,\r\n    startingArmor,\r\n    attackRate,\r\n    attackRange,\r\n    startingDamageMin,\r\n    startingDamageMax,\r\n    visionNighttimeRange,\r\n    visionDaytimeRange,\r\n    talents,\r\n    abilitiesData\r\n  );\r\n}\r\n\r\nfunction updateHero(\r\n  primaryAttribute,\r\n  agilityBase,\r\n  agilityGain,\r\n  intelligenceBase,\r\n  intelligenceGain,\r\n  strengthBase,\r\n  strengthGain,\r\n  attackType,\r\n  abilities,\r\n  shortName,\r\n  complexity,\r\n  hpBarOffset,\r\n  mpRegen,\r\n  language,\r\n  roles,\r\n  rolesData,\r\n  moveSpeed,\r\n  moveTurnRate,\r\n  startingMagicArmor,\r\n  startingArmor,\r\n  attackRate,\r\n  attackRange,\r\n  startingDamageMin,\r\n  startingDamageMax,\r\n  visionNighttimeRange,\r\n  visionDaytimeRange,\r\n  talents,\r\n  abilitiesData\r\n) {\r\n  setHeroBase(\r\n    primaryAttribute,\r\n    agilityBase,\r\n    agilityGain,\r\n    intelligenceBase,\r\n    intelligenceGain,\r\n    strengthBase,\r\n    strengthGain\r\n  );\r\n  setHeroPrimaryAttribute(primaryAttribute);\r\n  setHeroAttackType(attackType);\r\n  setHeroAbilities(abilities);\r\n  setHeroVideo(shortName);\r\n  setHeroComplexity(complexity);\r\n  setHeroHPMP(strengthBase, hpBarOffset, intelligenceBase, mpRegen);\r\n  setHeroName(language.displayName);\r\n  setHeroRoles(roles, rolesData.data.constants.roles);\r\n  setHeroBasic(\r\n    moveSpeed,\r\n    moveTurnRate,\r\n    startingMagicArmor,\r\n    startingArmor,\r\n    attackRate,\r\n    attackRange,\r\n    startingDamageMin,\r\n    startingDamageMax,\r\n    visionNighttimeRange,\r\n    visionDaytimeRange\r\n  );\r\n  setHeroTalents(talents, abilitiesData.data.constants.abilities);\r\n  setHeroAbilityHover(abilities);\r\n  setHeroScepterShard(abilities);\r\n}\r\n\r\n/**\r\n * Set hero video/image\r\n * @param {string} shortName - Hero shortName for video\r\n */\r\nfunction setHeroVideo(shortName) {\r\n  // video poster\r\n  heroVideoNode.setAttribute(\"src\", VIDEO_URL + shortName + \".webm\");\r\n  heroVideoNode.setAttribute(\"poster\", VIDEO_URL + shortName + \".png\");\r\n  heroVideoNodeFallbackImgNode.setAttribute(\r\n    \"src\",\r\n    VIDEO_URL + shortName + \".png\"\r\n  );\r\n  heroVideoSourceNode.setAttribute(\"src\", VIDEO_URL + shortName + \".webm\");\r\n  heroVideoSourceNode.setAttribute(\"type\", \"video/webm\");\r\n}\r\n\r\n/**\r\n * Set hero name\r\n * @param {string} displayName - Hero display name base on the language\r\n */\r\nfunction setHeroName(displayName) {\r\n  heroNameNode.innerHTML = displayName;\r\n}\r\n\r\n/**\r\n * Set hero roles\r\n * @param {array} roles - List hero roles\r\n * @param {array} rolesData - List all roles\r\n */\r\nfunction setHeroRoles(roles, rolesData) {\r\n  heroRolesNode.innerHTML = \"\";\r\n\r\n  for (let role of roles) {\r\n    const heroRolesDom = document.createElement(\"span\");\r\n    heroRolesDom.classList.add(\"hero-roles\");\r\n    heroRolesDom.innerHTML = role[\"roleId\"] + \",\";\r\n    heroRolesNode.appendChild(heroRolesDom);\r\n  }\r\n}\r\n\r\n/**\r\n * Set hero hp mp\r\n * @param {number} strengthBase - Hero base strength\r\n * @param {number} hpBarOffset - Hero hp offset\r\n * @param {number} intelligenceBase - Hero base intelligence\r\n * @param {number} mpRegen - Hero mana regen\r\n */\r\nfunction setHeroHPMP(strengthBase, hpBarOffset, intelligenceBase, mpRegen) {\r\n  // Hero hp and hp regenration have some fomular\r\n  // https://dota2.fandom.com/wiki/Health\r\n  const hp = BASE_HEALTH + strengthBase * HP_UNIT;\r\n  const hpGen = (\r\n    hpBarOffset +\r\n    strengthBase * BOUNUS_HEALTH_REGENERATION\r\n  ).toFixed(2);\r\n\r\n  // https://dota2.fandom.com/wiki/Mana\r\n  const mp = BASE_MANA + intelligenceBase * MP_UNIT;\r\n  const mpGen = (mpRegen + intelligenceBase * BOUNUS_MANA_REGENERATION).toFixed(\r\n    2\r\n  );\r\n\r\n  heroHpDom.innerHTML = hp + \" / +\" + hpGen;\r\n  heroMpDom.innerHTML = mp + \" / +\" + mpGen;\r\n}\r\n\r\n/**\r\n * Set hero complexity at top right corner\r\n * @param {number} complexity - Hero complexity: 1, 2,3\r\n */\r\nfunction setHeroComplexity(complexity) {\r\n  complexityListNode.innerHTML = \"\";\r\n\r\n  for (let i = 1; i <= complexity; i++) {\r\n    const complexityImgDom = document.createElement(\"span\");\r\n    complexityImgDom.classList.add(\"hero-complexity-num\");\r\n    complexityListNode.appendChild(complexityImgDom);\r\n  }\r\n}\r\n\r\n/**\r\n * Set hero base attribute\r\n * @param {string} primaryAttribute - Hero primary attribute\r\n * @param {number} agilityBase - Hero base agility\r\n * @param {number} agilityGain - Hero agility gain\r\n * @param {number} intelligenceBase - Hero base intelligence\r\n * @param {number} intelligenceGain - Hero intelligence gain\r\n * @param {number} strengthBase - Hero base strength\r\n * @param {number} strengthGain - Hero strength gain\r\n */\r\nfunction setHeroBase(\r\n  primaryAttribute,\r\n  agilityBase,\r\n  agilityGain,\r\n  intelligenceBase,\r\n  intelligenceGain,\r\n  strengthBase,\r\n  strengthGain\r\n) {\r\n  heroBaseNode.innerHTML = \"\";\r\n  // hero base\r\n  const heroBaseStrGainDom = document.createElement(\"div\");\r\n  heroBaseStrGainDom.classList = [\"hero-base-str-gain\"];\r\n\r\n  const heroBaseIntGainDom = document.createElement(\"div\");\r\n  heroBaseIntGainDom.classList = [\"hero-base-int-gain\"];\r\n\r\n  const heroBaseAgiGainDom = document.createElement(\"div\");\r\n  heroBaseAgiGainDom.classList = [\"hero-base-agi-gain\"];\r\n\r\n  heroBaseStrGainDom.innerHTML = `${strengthBase} <span>+${strengthGain.toFixed(\r\n    2\r\n  )}</span>`;\r\n  heroBaseIntGainDom.innerHTML = `${intelligenceBase} <span>+${intelligenceGain.toFixed(\r\n    2\r\n  )}</span>`;\r\n  heroBaseAgiGainDom.innerHTML = `${agilityBase} <span>+${agilityGain.toFixed(\r\n    2\r\n  )}</span>`;\r\n\r\n  // here different primary attr hero, the first attr will be his primary attr\r\n  if (primaryAttribute === \"str\") {\r\n    heroBaseStrGainDom.classList.add(\"primary-att\");\r\n    heroBaseNode.appendChild(heroBaseStrGainDom);\r\n    heroBaseNode.appendChild(heroBaseIntGainDom);\r\n    heroBaseNode.appendChild(heroBaseAgiGainDom);\r\n  } else if (primaryAttribute === \"int\") {\r\n    heroBaseIntGainDom.classList.add(\"primary-att\");\r\n    heroBaseNode.appendChild(heroBaseIntGainDom);\r\n    heroBaseNode.appendChild(heroBaseAgiGainDom);\r\n    heroBaseNode.appendChild(heroBaseStrGainDom);\r\n  } else if (primaryAttribute === \"agi\") {\r\n    heroBaseAgiGainDom.classList.add(\"primary-att\");\r\n    heroBaseNode.appendChild(heroBaseAgiGainDom);\r\n    heroBaseNode.appendChild(heroBaseStrGainDom);\r\n    heroBaseNode.appendChild(heroBaseIntGainDom);\r\n  }\r\n}\r\n\r\n/**\r\n * Set hero primary attribute image\r\n * @param {string} primaryAttribute - Hero primary attribute\r\n */\r\nfunction setHeroPrimaryAttribute(primaryAttribute) {\r\n  heroPrimaryAttrDom.setAttribute(\r\n    \"src\",\r\n    `../images/${PRIMARY_ATTR_LIST[primaryAttribute]}.png`\r\n  );\r\n}\r\n\r\n/**\r\n * Set hero attack type image\r\n * @param {string} attackType - Hero attack type\r\n */\r\nfunction setHeroAttackType(attackType) {\r\n  heroAttackTypeDom.setAttribute(\r\n    \"src\",\r\n    `./images/${attackType.toLowerCase()}.svg`\r\n  );\r\n}\r\n\r\n/**\r\n * Set hero basic info\r\n * @param {number} moveSpeed - Hero move Speed\r\n * @param {number} moveTurnRate - Hero turn rate\r\n * @param {number} startingMagicArmor - Hero magic resist\r\n * @param {number} startingArmor  - Hero armor\r\n * @param {number} attackRate - Hero attack rate\r\n * @param {number} attackRange - Hero attack range\r\n * @param {number} startingDamageMin - Hero min damage\r\n * @param {number} startingDamageMax - Hero max damage\r\n * @param {number} visionNighttimeRange - Hero night time vision range\r\n * @param {number} visionDaytimeRange - Hero day time vision range\r\n */\r\nfunction setHeroBasic(\r\n  moveSpeed,\r\n  moveTurnRate,\r\n  startingMagicArmor,\r\n  startingArmor,\r\n  attackRate,\r\n  attackRange,\r\n  startingDamageMin,\r\n  startingDamageMax,\r\n  visionNighttimeRange,\r\n  visionDaytimeRange\r\n) {\r\n  // attack\r\n  const baseAttack = `${startingDamageMin} - ${startingDamageMax}`;\r\n  // vision\r\n  const vision = `${visionNighttimeRange} - ${visionDaytimeRange}`;\r\n\r\n  // attack\r\n  heroBaseAttackDom.innerHTML = baseAttack;\r\n  heroAttackRateDom.innerHTML = attackRate.toFixed(2);\r\n  heroAttackRangeDom.innerHTML = attackRange;\r\n\r\n  // defense\r\n  heroArmorDom.innerHTML = startingArmor.toFixed(2);\r\n  heroMagicResistDom.innerHTML = startingMagicArmor + \"%\";\r\n\r\n  // mobility\r\n  heroTurnRateDom.innerHTML = moveTurnRate.toFixed(2);\r\n  heroMoveSpeedDom.innerHTML = moveSpeed;\r\n  heroVisionDom.innerHTML = vision;\r\n}\r\n\r\n/**\r\n * Set hero abilities\r\n * @param {array} abilities - hero abilities\r\n */\r\nfunction setHeroAbilities(abilities) {\r\n  heroAbilitiesListNode.innerHTML = \"\";\r\n  // we need filter those generic_hidden abilities that are useless\r\n  abilities = abilities.filter(\r\n    (ability) => ability[\"ability\"][\"name\"] !== \"generic_hidden\"\r\n  );\r\n\r\n  // only list normal abilities\r\n  const onlyNoramlAbilities = abilities.filter((ability) => {\r\n    return (\r\n      !ability[\"ability\"][\"stat\"][\"isGrantedByScepter\"] &&\r\n      !ability[\"ability\"][\"stat\"][\"isGrantedByShard\"]\r\n    );\r\n  });\r\n\r\n  // here get ability is graned by scepter, some ability is granted by scepter some is upgraded\r\n  const abilitiesIsGrantedByScepter = abilities.filter(\r\n    (i) =>\r\n      i[\"ability\"][\"stat\"][\"isGrantedByScepter\"] ||\r\n      i[\"ability\"][\"stat\"][\"hasScepterUpgrade\"]\r\n  )[0];\r\n\r\n  const abilitiesIsGrantedByShard = abilities.filter(\r\n    (i) =>\r\n      i[\"ability\"][\"language\"]?.shardDescription ||\r\n      i[\"ability\"][\"stat\"][\"isGrantedByShard\"]\r\n  )[0];\r\n\r\n  for (let ability of onlyNoramlAbilities) {\r\n    const heroAbilityDom = document.createElement(\"img\");\r\n    heroAbilityDom.setAttribute(\"onerror\", `this.src=\"${IMG_ONERROR}\"`);\r\n    heroAbilityDom.setAttribute(\r\n      \"src\",\r\n      `${STRATZ_ABILITIE_URL}/${ability[\"ability\"][\"name\"]}.png`\r\n    );\r\n    heroAbilityDom.setAttribute(\"data-ability\", ability[\"ability\"][\"name\"]);\r\n    // I wanna add yellow border for ultimate abilities\r\n    heroAbilityDom.classList.add(\"hero-ability\");\r\n    if (ability[\"ability\"][\"stat\"][\"isUltimate\"]) {\r\n      heroAbilityDom.classList.add(\"hero-ability-isUltimate\");\r\n    }\r\n    heroAbilitiesListNode.appendChild(heroAbilityDom);\r\n  }\r\n  // show the shard icon/scepter icon\r\n  heroScepterShardNode.setAttribute(\r\n    \"src\",\r\n    `./src/images/aghs_${!!abilitiesIsGrantedByScepter ? 1 : 0}_scepter_${\r\n      !!abilitiesIsGrantedByShard ? 1 : 0\r\n    }.png`\r\n  );\r\n}\r\n\r\n// {\r\n//   \"slot\": 1,\r\n//   \"gameVersionId\": 149,\r\n//   \"abilityId\": 5003,\r\n//   \"ability\": {\r\n//     \"id\": 5003,\r\n//     \"name\": \"antimage_mana_break\",\r\n//     \"uri\": \"antimage\",\r\n//     \"language\": {\r\n//       \"displayName\": \"Mana Break\",\r\n//       \"description\": [\r\n//         \"Burns an opponent's mana on each attack. Mana Break deals 50% of the mana burned as damage to the target. Mana Break has 50% effect if caused by illusions.\"\r\n//       ],\r\n//       \"attributes\": [\r\n//         \"MANA BURNED PER HIT: 28 / 40 / 52 / 64\",\r\n//         \"MAX MANA BURNED PER HIT: 1% / 1.8% / 2.6% / 3.4%\"\r\n//       ],\r\n//       \"lore\": \"A modified technique of the Turstarkuri monks' peaceful ways is to turn magical energies on their owner.\",\r\n//       \"aghanimDescription\": null,\r\n//       \"shardDescription\": null,\r\n//       \"notes\": []\r\n//     },\r\n//     \"stat\": {\r\n//       \"abilityId\": 5003,\r\n//       \"type\": 0,\r\n//       \"behavior\": 2,\r\n//       \"unitTargetType\": 0,\r\n//       \"unitTargetTeam\": 0,\r\n//       \"unitTargetFlags\": 0,\r\n//       \"unitDamageType\": 1,\r\n//       \"spellImmunity\": 4,\r\n//       \"modifierSupportValue\": 1,\r\n//       \"modifierSupportBonus\": 0,\r\n//       \"isOnCastbar\": true,\r\n//       \"isOnLearnbar\": true,\r\n//       \"fightRecapLevel\": 0,\r\n//       \"isGrantedByScepter\": false,\r\n//       \"hasScepterUpgrade\": false,\r\n//       \"maxLevel\": null,\r\n//       \"levelsBetweenUpgrades\": 0,\r\n//       \"requiredLevel\": 0,\r\n//       \"hotKeyOverride\": null,\r\n//       \"displayAdditionalHeroes\": false,\r\n//       \"castRange\": null,\r\n//       \"castRangeBuffer\": [\r\n//         250\r\n//       ],\r\n//       \"castPoint\": null,\r\n//       \"channelTime\": null,\r\n//       \"cooldown\": null,\r\n//       \"damage\": null,\r\n//       \"manaCost\": null,\r\n//       \"isUltimate\": false,\r\n//       \"duration\": \"\",\r\n//       \"charges\": \"\",\r\n//       \"chargeRestoreTime\": \"\",\r\n//       \"isGrantedByShard\": false,\r\n//       \"dispellable\": \"NONE\"\r\n//     },\r\n//     \"attributes\": [\r\n//       {\r\n//         \"name\": \"illusion_percentage\",\r\n//         \"value\": \"50\",\r\n//         \"linkedSpecialBonusAbilityId\": null,\r\n//         \"requiresScepter\": false\r\n//       },\r\n//       {\r\n//         \"name\": \"mana_per_hit\",\r\n//         \"value\": \"28 40 52 64\",\r\n//         \"linkedSpecialBonusAbilityId\": null,\r\n//         \"requiresScepter\": false\r\n//       },\r\n//       {\r\n//         \"name\": \"mana_per_hit_pct\",\r\n//         \"value\": \"1 1.8 2.6 3.4\",\r\n//         \"linkedSpecialBonusAbilityId\": 666,\r\n//         \"requiresScepter\": false\r\n//       },\r\n//       {\r\n//         \"name\": \"percent_damage_per_burn\",\r\n//         \"value\": \"50\",\r\n//         \"linkedSpecialBonusAbilityId\": null,\r\n//         \"requiresScepter\": false\r\n//       },\r\n//       {\r\n//         \"name\": \"silence_chance\",\r\n//         \"value\": \"15\",\r\n//         \"linkedSpecialBonusAbilityId\": null,\r\n//         \"requiresScepter\": false\r\n//       },\r\n//       {\r\n//         \"name\": \"silence_duration\",\r\n//         \"value\": \"3\",\r\n//         \"linkedSpecialBonusAbilityId\": null,\r\n//         \"requiresScepter\": false\r\n//       }\r\n//     ],\r\n//     \"isTalent\": false\r\n//   }\r\n// },\r\n\r\n// \"stats\": {\r\n//   \"enabled\": true,\r\n//   \"heroUnlockOrder\": 1,\r\n//   \"team\": true,\r\n//   \"cMEnabled\": true,\r\n//   \"newPlayerEnabled\": true,\r\n//   \"attackType\": \"Melee\",\r\n//   \"startingArmor\": 4,\r\n//   \"startingMagicArmor\": 25,\r\n//   \"startingDamageMin\": 53,\r\n//   \"startingDamageMax\": 57,\r\n//   \"attackRate\": 1.399999976158142,\r\n//   \"attackAnimationPoint\": 0.30000001192092896,\r\n//   \"attackAcquisitionRange\": 600,\r\n//   \"attackRange\": 150,\r\n//   \"primaryAttribute\": \"agi\",\r\n//   \"strengthBase\": 23,\r\n//   \"strengthGain\": 1.600000023841858,\r\n//   \"intelligenceBase\": 12,\r\n//   \"intelligenceGain\": 1.7999999523162842,\r\n//   \"agilityBase\": 24,\r\n//   \"agilityGain\": 2.799999952316284,\r\n//   \"mpRegen\": 0,\r\n//   \"moveSpeed\": 310,\r\n//   \"moveTurnRate\": 0.6000000238418579,\r\n//   \"hpBarOffset\": 0,\r\n//   \"visionDaytimeRange\": 1800,\r\n//   \"visionNighttimeRange\": 800,\r\n//   \"complexity\": 1\r\n// }\r\n\r\nfunction setHeroTalents(talents, abilitiesData) {\r\n  heroTalentTooltipNode.innerHTML = \"<span class='talent-bg-img'></span>\";\r\n  // talents\r\n  talents = talents.reverse();\r\n  for (let talent of talents) {\r\n    const heroTalentsDom = document.createElement(\"span\");\r\n    heroTalentTooltipNode.appendChild(heroTalentsDom);\r\n    const heroTalentData = abilitiesData.find(\r\n      (ability) => ability[\"id\"] === talent[\"abilityId\"]\r\n    );\r\n    heroTalentsDom.innerHTML =\r\n      heroTalentData[\"language\"]?.displayName ?? \"loading\";\r\n    heroTalentsDom.classList = [`talent-rows item${talent[\"slot\"]}`];\r\n  }\r\n}\r\n\r\n// TODO: hover the talent note\r\nheroTalentNode.addEventListener(\"mouseover\", (e) => {\r\n  // after show the tooltip, we need position above the talent icon\r\n  const heroTalent = e.target;\r\n\r\n  dynamicModalPostion(heroTalent, \"talent-tooltip\", \"flex\");\r\n  // const heroCard = e[\"path\"].filter((i) => i[\"className\"] === \"hero-card\")[0];\r\n  // const heroAbilitiesTalent = e[\"path\"].filter(\r\n  //   (i) => i[\"className\"] === \"hero-abilities-talent\"\r\n  // )[0];\r\n\r\n  // heroTalentTooltipNode.style.display = \"flex\";\r\n\r\n  // const tooltipHeight = heroTalentTooltipNode.offsetHeight;\r\n  // const tooltipWidth = heroTalentTooltipNode.offsetWidth;\r\n\r\n  // const tooltipX =\r\n  //   heroCard[\"offsetLeft\"] +\r\n  //   heroTalent[\"offsetLeft\"] +\r\n  //   heroTalent[\"width\"] / 2 -\r\n  //   tooltipWidth / 2 +\r\n  //   heroAbilitiesTalent[\"offsetLeft\"] +\r\n  //   \"px\";\r\n\r\n  // const tooltipY =\r\n  //   heroCard[\"offsetTop\"] +\r\n  //   heroTalent[\"offsetTop\"] -\r\n  //   tooltipHeight +\r\n  //   heroAbilitiesTalent[\"offsetTop\"] +\r\n  //   \"px\";\r\n  // heroTalentTooltipNode.style.left = tooltipX;\r\n  // heroTalentTooltipNode.style.top = tooltipY;\r\n});\r\n\r\nheroTalentNode.addEventListener(\"mouseout\", (e) => {\r\n  heroTalentTooltipNode.style.display = \"none\";\r\n});\r\n\r\n// ability tooltip\r\nfunction setHeroAbilityHover(abilities) {\r\n  const heroAbilitiesList =\r\n    heroCardFrontNode.getElementsByClassName(\"hero-ability\");\r\n  for (let i of heroAbilitiesList) {\r\n    i.addEventListener(\"mouseover\", (e) => {\r\n      const heroAbility = e.target;\r\n\r\n      heroAbilityTooltipNode.innerHTML = abilityTooltipTem(\r\n        heroAbility.getAttribute(\"data-ability\"),\r\n        abilities\r\n      );\r\n\r\n      dynamicModalPostion(heroAbility, \"ability-tooltip\");\r\n\r\n      // similar with talent tooltip position\r\n      // const heroCard = e[\"path\"].filter(\r\n      //   (p) => p[\"className\"] === \"hero-card\"\r\n      // )[0];\r\n      // const heroAbilitiesTalent = e[\"path\"].filter(\r\n      //   (p) => p[\"className\"] === \"hero-abilities-talent\"\r\n      // )[0];\r\n\r\n      // heroAbilityTooltipNode.style.display = \"block\";\r\n\r\n      // const tooltipHeight = heroAbilityTooltipNode.offsetHeight;\r\n      // const tooltipWidth = heroAbilityTooltipNode.offsetWidth;\r\n\r\n      // let tooltipX, tooltipY;\r\n\r\n      // // if modal height is exceed the top edge, we should move the modal right display\r\n      // if (\r\n      //   tooltipHeight >\r\n      //   heroCard[\"offsetTop\"] + heroAbility[\"offsetTop\"] - 20\r\n      // ) {\r\n      //   tooltipX =\r\n      //     heroCard[\"offsetLeft\"] +\r\n      //     heroAbility[\"offsetLeft\"] +\r\n      //     heroAbility[\"width\"] +\r\n      //     heroAbilitiesTalent[\"offsetLeft\"] +\r\n      //     \"px\";\r\n      //   tooltipY =\r\n      //     heroCard[\"offsetTop\"] +\r\n      //     heroAbility[\"offsetTop\"] +\r\n      //     heroAbility[\"height\"] -\r\n      //     tooltipHeight / 2 +\r\n      //     \"px\";\r\n      // } else {\r\n      //   tooltipX =\r\n      //     heroCard[\"offsetLeft\"] +\r\n      //     heroAbility[\"offsetLeft\"] +\r\n      //     heroAbility[\"width\"] / 2 -\r\n      //     tooltipWidth / 2 +\r\n      //     heroAbilitiesTalent[\"offsetLeft\"] +\r\n      //     \"px\";\r\n      //   tooltipY =\r\n      //     heroCard[\"offsetTop\"] +\r\n      //     heroAbility[\"offsetTop\"] -\r\n      //     tooltipHeight +\r\n      //     heroAbilitiesTalent[\"offsetTop\"] +\r\n      //     \"px\";\r\n      // }\r\n\r\n      // heroAbilityTooltipNode.style.left = tooltipX;\r\n      // heroAbilityTooltipNode.style.top = tooltipY;\r\n\r\n      i.addEventListener(\"mouseout\", (e) => {\r\n        heroAbilityTooltipNode.style.display = \"none\";\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\n// hover on the ability node\r\n// abilities tooltip content template\r\nconst abilityTooltipTem = (abilityName, abilities) => {\r\n  const ability = abilities.find(\r\n    (ability) => ability[\"ability\"][\"name\"] === abilityName\r\n  );\r\n  const { name, language, attributes, stat } = ability[\"ability\"];\r\n  const {\r\n    cooldown,\r\n    manaCost,\r\n    unitDamageType,\r\n    dispellable,\r\n    unitTargetTeam,\r\n    spellImmunity,\r\n  } = stat;\r\n  const { displayName, description } = language || {};\r\n  const imgData = `${STRATZ_ABILITIE_URL}/${name}.png`;\r\n\r\n  let abilityHTML = \"\";\r\n\r\n  abilityHTML = abilityScepterShardCommonContent(\r\n    spellImmunity,\r\n    manaCost,\r\n    cooldown,\r\n    attributes,\r\n    unitDamageType,\r\n    dispellable,\r\n    unitTargetTeam,\r\n    description\r\n  );\r\n\r\n  return `\r\n    <div class=\"item-main\">\r\n      <img height=\"50px\" src='${imgData}' onerror='this.src=\"${IMG_ONERROR}\"'/>\r\n      <div class=\"item-main-right\"><h3>${displayName}</h3></div>\r\n    </div>\r\n\r\n    ${abilityHTML}\r\n    \r\n  \r\n    `;\r\n};\r\n\r\n// seem scepter and ablitiy modal have common content I will grab them in a function for reuse\r\nfunction abilityScepterShardCommonContent(\r\n  spellImmunity,\r\n  manaCost,\r\n  cooldown,\r\n  attributes,\r\n  unitDamageType,\r\n  dispellable,\r\n  unitTargetTeam,\r\n  description = \"\"\r\n) {\r\n  // mana cose\r\n  const mcData = manaCost !== null ? manaCost.join(\" / \") : \"NA\";\r\n  //cool down\r\n  const cdData = cooldown !== null ? cooldown.join(\" / \") : \"NA\";\r\n\r\n  let attribData = \"\";\r\n  if (attributes) {\r\n    for (let attr of attributes) {\r\n      const { name, value } = attr;\r\n      const nameData = name.replaceAll(\"_\", \" \").toUpperCase();\r\n      const valueData = value.replaceAll(\" \", \" / \");\r\n      attribData += `<div class=\"item-row\"><label>${nameData}:</label><span class=\"item-value\"> ${valueData} </span></div>`;\r\n    }\r\n  }\r\n\r\n  // here damage type is base on\r\n  let damTypeText;\r\n  if (unitDamageType === 1) {\r\n    damTypeText = \"red-txt\";\r\n  } else if (unitDamageType === 2) {\r\n    damTypeText = \"blue-txt\";\r\n  } else {\r\n    damTypeText = \"green-txt\";\r\n  }\r\n\r\n  const dispellableHTML =\r\n    dispellable === \"YES\"\r\n      ? `<div class=\"item-row\"><label>DISPELLABLE:</label>${dispellable}</div>`\r\n      : \"\";\r\n\r\n  const dmgTypeHTML = unitDamageType\r\n    ? `<div class=\"item-row\"><label>DAMAGE TYPE:</label><span class=\"${damTypeText}\">${formatText(\r\n        DAMAGE_TYPE[unitDamageType],\r\n        \"_\",\r\n        2\r\n      )}</span></div>`\r\n    : \"\";\r\n\r\n  const unitTargetTeamHTML = unitTargetTeam\r\n    ? `\r\n  <div class=\"item-row\"><label>DAMAGE AFFECTS: <label><span>\r\n      ${formatText(DOTA_UNIT_TARGET_TEAM[unitTargetTeam], \"_\", 4)}\r\n  </span></div>`\r\n    : \"\";\r\n\r\n  const spellImmunityText = spellImmunity !== 4 ? \"green-txt\" : \"red-txt\";\r\n  const spellImmunityHTML = spellImmunity\r\n    ? `\r\n  <div class=\"item-row\"><label>PIERCES SPELL IMMUNITY: <label><span class=\"${spellImmunityText}\">\r\n      ${SPELL_IMMUNITY_LIST[spellImmunity]}\r\n</span></div>\r\n  `\r\n    : \"\";\r\n\r\n  return `<div class=\"item-sub box\">\r\n    ${unitTargetTeamHTML}\r\n    ${dispellableHTML}\r\n    ${dmgTypeHTML}\r\n    ${spellImmunityHTML}\r\n  </div>\r\n\r\n  ${description ? `<div class=\"item-desc box\">${description[0]}</div>` : \"\"}\r\n  ${attributes ? `<div class=\"item-sub box\"> ${attribData} </div>` : \"\"}\r\n\r\n  ${\r\n    manaCost !== null && cooldown !== null\r\n      ? `\r\n    <div class=\"item-mc-cd\">\r\n      ${\r\n        manaCost !== null\r\n          ? `\r\n        <span class=\"item-mc\">\r\n          <span class=\"mana-icon\"></span>${mcData}\r\n        </span>\r\n      `\r\n          : \"\"\r\n      }\r\n      ${\r\n        cooldown !== null\r\n          ? `\r\n        <span class=\"item-cd\">\r\n          <img width=\"15px\" height=\"15px\" alt=\"cooldown\" src=\"./src/images/cooldown.png\"/>${cdData}\r\n        </span>\r\n      `\r\n          : \"\"\r\n      }\r\n    </div>\r\n    `\r\n      : \"\"\r\n  }`;\r\n}\r\n\r\n// scepter modal\r\nheroScepterShardNode.addEventListener(\"mouseover\", (e) => {\r\n  const heroScepterShard = e.target;\r\n\r\n  dynamicModalPostion(heroScepterShard, \"scepter-shard-tooltip\", \"flex\");\r\n  // const heroCard = e[\"path\"].filter((p) => p[\"className\"] === \"hero-card\")[0];\r\n  // const heroAbilitiesTalent = e[\"path\"].filter(\r\n  //   (p) => p[\"className\"] === \"hero-abilities-talent\"\r\n  // )[0];\r\n\r\n  // heroScepterShardTooltipNode.style.display = \"flex\";\r\n\r\n  // const tooltipHeight = heroScepterShardTooltipNode.offsetHeight;\r\n  // const tooltipWidth = heroScepterShardTooltipNode.offsetWidth;\r\n\r\n  // const tooltipX =\r\n  //   heroCard[\"offsetLeft\"] +\r\n  //   heroScepterShard[\"offsetLeft\"] +\r\n  //   heroScepterShard[\"width\"] +\r\n  //   heroAbilitiesTalent[\"offsetLeft\"] +\r\n  //   \"px\";\r\n\r\n  // const tooltipY =\r\n  //   heroCard[\"offsetTop\"] +\r\n  //   heroScepterShard[\"offsetTop\"] +\r\n  //   heroScepterShard[\"height\"] / 2 -\r\n  //   tooltipHeight / 2 +\r\n  //   \"px\";\r\n\r\n  // heroScepterShardTooltipNode.style.left = tooltipX;\r\n  // heroScepterShardTooltipNode.style.top = tooltipY;\r\n});\r\nheroScepterShardNode.addEventListener(\"mouseout\", (e) => {\r\n  heroScepterShardTooltipNode.style.display = \"none\";\r\n});\r\n\r\n// scepter data\r\nfunction setHeroScepterShard(abilities) {\r\n  heroScepterShardTooltipNode.innerHTML = \"\";\r\n  // here get ability is graned by scepter, some ability is granted by scepter some is upgraded\r\n  const abilitiesIsGrantedByScepter = abilities.filter(\r\n    (i) =>\r\n      i[\"ability\"][\"stat\"][\"isGrantedByScepter\"] ||\r\n      (i[\"ability\"][\"stat\"][\"hasScepterUpgrade\"] &&\r\n        (i[\"ability\"][\"language\"]?.aghanimDescription ||\r\n          i[\"ability\"][\"language\"]?.description[0]))\r\n  )[0];\r\n\r\n  const abilitiesIsGrantedByShard = abilities.filter(\r\n    (i) =>\r\n      i[\"ability\"][\"stat\"][\"isGrantedByShard\"] ||\r\n      i[\"ability\"][\"language\"]?.shardDescription\r\n  )[0];\r\n\r\n  return (heroScepterShardTooltipNode.innerHTML = `\r\n    ${scepterShardTooltipTem(abilitiesIsGrantedByScepter, \"scepter\")}\r\n    <div class=\"divided\"></div>\r\n    ${scepterShardTooltipTem(abilitiesIsGrantedByShard, \"shard\")}\r\n  `);\r\n}\r\n\r\nconst scepterShardTooltipTem = (ability, isScepterOrShard) => {\r\n  // if no ability, show no data but some UI\r\n  if (!ability) {\r\n    return `\r\n      <div class=\"${isScepterOrShard} scepter-shard-row\">\r\n        <div class=\"item-main\">\r\n          <img src=\"./src/images/${isScepterOrShard}_0.png\" alt=\"${isScepterOrShard} img\" />\r\n          <div class=\"item-main-right\">\r\n            <h3>Aghanim's ${isScepterOrShard}</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"no-detail\">Current the hero does not have Aghanim</div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  const { stat, language, name, attributes } = ability[\"ability\"];\r\n  const {\r\n    hasScepterUpgrade,\r\n    isGrantedByShard,\r\n    cooldown,\r\n    manaCost,\r\n    unitDamageType,\r\n    dispellable,\r\n    spellImmunity,\r\n    unitTargetTeam,\r\n  } = stat;\r\n  const { aghanimDescription, description, displayName, shardDescription } =\r\n    language || {};\r\n  const imgData = `${STRATZ_ABILITIE_URL}/${name}.png`;\r\n\r\n  let isScepterUpgradeHTML;\r\n  let upgradeOrNewText = \"UPGRADE\";\r\n  let abilityHTML;\r\n  // for scepter and shared, some abilities is granted some is upgraded\r\n  if (isScepterOrShard === \"scepter\") {\r\n    isScepterUpgradeHTML =\r\n      hasScepterUpgrade && aghanimDescription\r\n        ? aghanimDescription\r\n        : description;\r\n    upgradeOrNewText =\r\n      hasScepterUpgrade && aghanimDescription ? \"UPGRADE\" : \"NEW\";\r\n  }\r\n  if (isScepterOrShard === \"shard\") {\r\n    upgradeOrNewText = isGrantedByShard ? \"NEW\" : \"UPGRADE\";\r\n  }\r\n  // if new, we will show common content like ability, if it's upgrade, we some simple data\r\n  if (upgradeOrNewText === \"NEW\") {\r\n    abilityHTML = abilityScepterShardCommonContent(\r\n      spellImmunity,\r\n      manaCost,\r\n      cooldown,\r\n      attributes,\r\n      unitDamageType,\r\n      dispellable,\r\n      unitTargetTeam\r\n    );\r\n  }\r\n\r\n  return `\r\n      <div class=\"${isScepterOrShard} scepter-shard-row\">\r\n        <div class=\"item-main\">\r\n          <img src=\"../images/${isScepterOrShard}_1.png\" alt=\"${isScepterOrShard} img\" />\r\n          <div class=\"item-main-right\">\r\n            <h3>Aghanim's ${isScepterOrShard}</h3>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"item-detail\">\r\n          <img class=\"ability-img\" src=\"${imgData}\" />\r\n          <div class=\"item-detail-right\">\r\n            <h3>${displayName} <span>${upgradeOrNewText}</span></h3>\r\n            <p>${\r\n              isScepterOrShard === \"scepter\"\r\n                ? isScepterUpgradeHTML\r\n                : shardDescription\r\n            }</p>\r\n            ${abilityHTML}\r\n          </div>\r\n        </div>\r\n    </div>\r\n    `;\r\n};\r\n\r\nconst pushEl = (t) => {\r\n  const {\r\n    className,\r\n    offsetTop,\r\n    offsetLeft,\r\n    offsetHeight,\r\n    offsetWidth,\r\n    width,\r\n    height,\r\n  } = t;\r\n  return {\r\n    className,\r\n    offsetTop,\r\n    offsetLeft,\r\n    offsetHeight,\r\n    offsetWidth,\r\n    width,\r\n    height,\r\n  };\r\n};\r\n\r\nfunction dynamicModalPostion(\r\n  target,\r\n  modalNodeClas,\r\n  modalNodeDisplayValue = \"block\"\r\n) {\r\n  let t = target,\r\n    i = 0,\r\n    arr = [];\r\n  const mouseTargetWidth = target[\"offsetWidth\"];\r\n  const mouseTargetHeight = target[\"offsetHeight\"];\r\n  const windowScrollY = window.scrollY;\r\n  const windowScrollX = window.scrollX;\r\n  arr.push(pushEl(t));\r\n  do {\r\n    t = t.offsetParent;\r\n    i++;\r\n    arr.push(pushEl(t));\r\n  } while (t.offsetParent);\r\n\r\n  const tooltipXOffsetLeftTotal = arr.reduce(\r\n    (total, cur) => total + cur.offsetLeft,\r\n    0\r\n  );\r\n  const tooltipYOffsetTopTotal = arr.reduce(\r\n    (total, cur) => total + cur.offsetTop,\r\n    0\r\n  );\r\n\r\n  let tooltipX, tooltipY;\r\n  const modalNode = document.getElementsByClassName(modalNodeClas)[0];\r\n  modalNode.style.display = modalNodeDisplayValue;\r\n  const tooltipHeight = modalNode.offsetHeight;\r\n  const tooltipWidth = modalNode.offsetWidth;\r\n\r\n  // top\r\n  if (tooltipYOffsetTopTotal - windowScrollY >= tooltipHeight) {\r\n    tooltipY = tooltipYOffsetTopTotal - tooltipHeight + \"px\";\r\n\r\n    // top  center----\r\n    if (tooltipXOffsetLeftTotal - windowScrollX >= tooltipWidth / 2) {\r\n      tooltipX =\r\n        tooltipXOffsetLeftTotal +\r\n        mouseTargetWidth / 2 -\r\n        tooltipWidth / 2 +\r\n        \"px\";\r\n    }\r\n    // top left -----\r\n    if (tooltipXOffsetLeftTotal - windowScrollX < tooltipWidth / 2) {\r\n      tooltipX = tooltipXOffsetLeftTotal + \"px\";\r\n    }\r\n    // top right ---\r\n    if (\r\n      window.innerWidth -\r\n        (tooltipXOffsetLeftTotal - windowScrollX + mouseTargetWidth) <\r\n      tooltipWidth / 2\r\n    ) {\r\n      tooltipX =\r\n        tooltipXOffsetLeftTotal + mouseTargetHeight - tooltipWidth + \"px\";\r\n    }\r\n  }\r\n\r\n  // top edge\r\n  if (tooltipYOffsetTopTotal - windowScrollY < tooltipHeight / 2) {\r\n    tooltipY = tooltipYOffsetTopTotal + \"px\";\r\n    // top edge left\r\n    if (\r\n      window.innerWidth -\r\n        (tooltipXOffsetLeftTotal - windowScrollX + mouseTargetWidth) >=\r\n      tooltipWidth\r\n    ) {\r\n      tooltipX = tooltipXOffsetLeftTotal + mouseTargetWidth + \"px\";\r\n    }\r\n    // top edget right\r\n    if (\r\n      window.innerWidth -\r\n        (tooltipXOffsetLeftTotal - windowScrollX + mouseTargetWidth) <\r\n      tooltipWidth\r\n    ) {\r\n      tooltipX = tooltipXOffsetLeftTotal - tooltipWidth + \"px\";\r\n    }\r\n  }\r\n\r\n  // vertical\r\n  if (\r\n    tooltipYOffsetTopTotal - windowScrollY < tooltipHeight &&\r\n    tooltipYOffsetTopTotal - windowScrollY >= tooltipHeight / 2\r\n  ) {\r\n    tooltipY =\r\n      tooltipYOffsetTopTotal + mouseTargetHeight / 2 - tooltipHeight / 2 + \"px\";\r\n\r\n    // vertical right\r\n    if (\r\n      window.innerWidth -\r\n        (tooltipXOffsetLeftTotal - windowScrollX + mouseTargetWidth) >=\r\n      tooltipWidth\r\n    ) {\r\n      tooltipX = tooltipXOffsetLeftTotal + mouseTargetWidth + \"px\";\r\n    }\r\n\r\n    // vertical left\r\n    if (\r\n      window.innerWidth -\r\n        (tooltipXOffsetLeftTotal - windowScrollX + mouseTargetWidth) <\r\n      tooltipWidth\r\n    ) {\r\n      tooltipX = tooltipXOffsetLeftTotal - tooltipWidth + \"px\";\r\n    }\r\n  }\r\n\r\n  // bottom edge\r\n  if (\r\n    window.innerHeight -\r\n      (tooltipYOffsetTopTotal - windowScrollY + mouseTargetHeight) <\r\n    tooltipHeight / 2\r\n  ) {\r\n    tooltipY =\r\n      tooltipYOffsetTopTotal + mouseTargetHeight - tooltipHeight + \"px\";\r\n\r\n    // bottom edge right\r\n    if (\r\n      window.innerWidth -\r\n        (tooltipXOffsetLeftTotal - windowScrollX + mouseTargetWidth) >=\r\n      tooltipWidth\r\n    ) {\r\n      tooltipX = tooltipXOffsetLeftTotal + mouseTargetWidth + \"px\";\r\n    }\r\n\r\n    // bottom edge left\r\n    if (\r\n      window.innerWidth -\r\n        (tooltipXOffsetLeftTotal - windowScrollX + mouseTargetWidth) <\r\n      tooltipWidth\r\n    ) {\r\n      tooltipX = tooltipXOffsetLeftTotal - tooltipWidth + \"px\";\r\n    }\r\n  }\r\n\r\n  // bottom\r\n  if (tooltipYOffsetTopTotal - windowScrollY < 0) {\r\n    tooltipY = tooltipYOffsetTopTotal + mouseTargetHeight + \"px\";\r\n\r\n    // top  center----\r\n    if (tooltipXOffsetLeftTotal - windowScrollX >= tooltipWidth / 2) {\r\n      tooltipX =\r\n        tooltipXOffsetLeftTotal +\r\n        mouseTargetWidth / 2 -\r\n        tooltipWidth / 2 +\r\n        \"px\";\r\n    }\r\n    // top left -----\r\n    if (tooltipXOffsetLeftTotal - windowScrollX < tooltipWidth / 2) {\r\n      tooltipX = tooltipXOffsetLeftTotal + \"px\";\r\n    }\r\n    // top right ---\r\n    if (\r\n      window.innerWidth -\r\n        (tooltipXOffsetLeftTotal - windowScrollX + mouseTargetWidth) <\r\n      tooltipWidth / 2\r\n    ) {\r\n      tooltipX =\r\n        tooltipXOffsetLeftTotal + mouseTargetHeight - tooltipWidth + \"px\";\r\n    }\r\n  }\r\n\r\n  modalNode.style.left = tooltipX;\r\n  modalNode.style.top = tooltipY;\r\n\r\n  console.log(windowScrollY);\r\n  // console.table(arr)\r\n  // console.log(tooltipYOffsetTopTotal - windowScrollY)\r\n}\r\n"]}